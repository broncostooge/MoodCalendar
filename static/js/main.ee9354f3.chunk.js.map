{"version":3,"sources":["Firebase/index.js","reducers/index.js","store/index.js","HomePage/index.js","HomePage/CreateUser.js","Components/Stats/ColumnGraph.js","Components/Stats/Count.js","Components/Stats/PieGraph.js","Components/Stats/index.js","Components/Calendar/Mood.js","Components/TableOfContents/index.js","Components/Calendar/ColumnOfNumbers.js","Components/Calendar/Month.js","Components/Calendar/index.js","HomePage/Logout.js","CalendarApp.js","Routes/index.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","initialState","Horrible","Bad","Average","Good","Great","User","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","state","arguments","length","undefined","action","newState","Object","objectSpread","type","store","createStore","persistor","persistStore","HomePage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","WarningMessage","ErrorCode","ErrorMessage","Login","bind","assertThisInitialized","document","getElementById","style","display","HideAlerts","email","password","_this2","setState","auth","signInWithEmailAndPassword","then","user","dispatch","setTimeout","history","push","catch","error","code","toString","message","_this3","react_default","a","createElement","className","id","class","name","placeholder","value","onClick","Link","to","Component","connect","CreateUser","createUserWithEmailAndPassword","firestore","collection","doc","currentUser","uid","set","console","log","_this4","ColumnGraph","data","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","Count","CountList","CountOutput","countList","index","moodCount","color","map","mood","PieGraph","COLORS","PieChart","onMouseEnter","onPieEnter","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","entry","Cell","Stats","Stats_Count","Stats_ColumnGraph","Stats_PieGraph","Mood","onOpenModal","open","onCloseModal","month","day","localStorage","getItem","note","colorToChangeTo","get","thisDoc","update","colorChangingFrom","dispatchIncreaseMoodToStore","dispatchDecreaseMoodToStore","setItem","noteText","noteSaved","button","buttonStyle","backgroundColor","output","colorOfMood","TOCButton","LeapYearDay","Math","random","disabled","index_es","onEntered","setTextArea","onClose","center","changeMood","saveNote","_default","e","sel","leapYearButton","options","selectedIndex","text","removeItem","ListOfMoods","Calendar_Mood","onChange","handleChange","ColumnOfNumbers","days","i","Month","buttons","columnOfMonths","CreateArrayOfMonthsAndDays","months","Month_Month","ColumnOfNumbers_ColumnOfNumbers","Logout","signOut","errorCode","errorMessage","CalendarApp","es","integration_react","loading","Logout_Logout","TableOfContents_default","Calendar_default","Stats_Stats","Routes","Switch","Route","exact","path","component","Home","MoodCalendar","App","Routes_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee9354f3.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst REACT_APP_API_KEY=\"AIzaSyDwPbrYyKjoj9llXkcKL2EVCiy0hoVbKyw\"\r\nconst REACT_APP_AUTH_DOMAIN=\"moodcalendar-6676d.firebaseapp.com\"\r\nconst REACT_APP_DATABASE_URL=\"https://moodcalendar-6676d.firebaseio.com\"\r\nconst REACT_APP_PROJECT_ID=\"moodcalendar-6676d\"\r\nconst REACT_APP_STORAGE_BUCKET=\"moodcalendar-6676d.appspot.com\"\r\nconst REACT_APP_MESSAGING_SENDER_ID=\"7576934015\"\r\n\r\nconst config = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: REACT_APP_DATABASE_URL,\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: REACT_APP_MESSAGING_SENDER_ID\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","const initialState = {\r\n    Horrible:0,\r\n    Bad:0,\r\n    Average:0,\r\n    Good:0,\r\n    Great:0,\r\n    User: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    const newState = {...state};\r\n    \r\n    //HORRIBLE\r\n    if(action.type === 'INCREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible += 1;\r\n    }\r\n    if(action.type === 'DECREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible -= 1;\r\n    }\r\n\r\n    //BAD\r\n    if(action.type === 'INCREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad += 1;\r\n    }\r\n    if(action.type === 'DECREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad -= 1;\r\n    }\r\n\r\n    //AVERAGE\r\n    if(action.type === 'INCREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average += 1;\r\n    }\r\n    if(action.type === 'DECREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average -= 1;\r\n    }\r\n\r\n    //GOOD\r\n    if(action.type === 'INCREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good -= 1;\r\n    }\r\n\r\n    //GREAT\r\n    if(action.type === 'INCREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great -= 1;\r\n    }\r\n\r\n    //SET USER\r\n    if(action.type === 'SET_USER'){\r\n        newState.User = action.User;\r\n    }\r\n\r\n    return newState;\r\n}","import myReducer from '../reducers/index'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { createStore } from 'redux';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n   };\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, myReducer)\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\nimport '../Contents/CSS/LoginPage.css'\r\nimport { connect } from 'react-redux';\r\nimport { store } from '../store'\r\n\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            WarningMessage : \"\",\r\n            ErrorCode : \"\",\r\n            ErrorMessage : \"\"\r\n        };\r\n\r\n        this.Login = this.Login.bind(this);\r\n\r\n    }\r\n\r\n    HideAlerts(){\r\n        document.getElementById('login_warning').style.display = \"none\";\r\n        document.getElementById('login_danger').style.display = \"none\";\r\n        document.getElementById('login_success').style.display = \"none\";\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.HideAlerts();\r\n    }\r\n\r\n    Login(email, password) {\r\n\r\n        this.setState (() => {\r\n            return {WarningMessage: \"\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n        })\r\n\r\n        this.HideAlerts();\r\n\r\n        if(email && password){\r\n            firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then((user) => {\r\n\r\n                document.getElementById('login_success').style.display = \"block\";\r\n                \r\n                store.dispatch({ type: 'SET_USER', User: user });\r\n\r\n                setTimeout(() => {\r\n                    this.props.history.push('/MoodCalendar/App');\r\n                }, 1000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState (() => {\r\n                    return {WarningMessage: \"\", ErrorCode : error.code.toString(), ErrorMessage: error.message.toString()};\r\n                })\r\n                document.getElementById('login_danger').style.display = \"block\";\r\n            });\r\n        }\r\n        else{\r\n            if(email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email & Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            document.getElementById('login_warning').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div class=\"fadeIn first\">\r\n                    <h1>Login</h1>\r\n                    </div>\r\n                    <form>\r\n\r\n                        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\"/>\r\n                        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\"/>\r\n                        <input type=\"button\" class=\"fadeIn fourth\" value=\"Log In\" onClick={ () => { this.Login(document.getElementById('login').value, document.getElementById('password').value) }}/>\r\n                        \r\n                        <div id=\"formFooter\">\r\n                            Not Registerd?<span class=\"underlineHover\"><Link to='/MoodCalendar/create'>Create an account</Link></span>\r\n                            <div className=\"alert alert-success\" id=\"login_success\">\r\n                                <strong>Success!</strong> Login Successfull\r\n                            </div>\r\n                            <div className=\"alert alert-warning\" id=\"login_warning\">\r\n                                <strong>Warning!</strong>{this.state.WarningMessage} Missing!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" id=\"login_danger\">\r\n                                <strong>Danger!</strong> {this.state.ErrorCode} {this.state.ErrorMessage}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        User: state.User\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\n\r\nexport default class CreateUser extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            WarningMessage : \"\",\r\n            ErrorCode : \"\",\r\n            ErrorMessage : \"\"\r\n        };\r\n\r\n        this.CreateUser = this.CreateUser.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById('create_warning').style.display = \"none\";\r\n        document.getElementById('create_danger').style.display = \"none\";\r\n        document.getElementById('create_success').style.display = \"none\";\r\n    }\r\n\r\n    CreateUser(email, password) {\r\n        \r\n        this.setState (() => {\r\n            return {WarningMessage: \"\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n        })\r\n\r\n        document.getElementById('create_warning').style.display = \"none\";\r\n        document.getElementById('create_danger').style.display = \"none\";\r\n        document.getElementById('create_success').style.display = \"none\";\r\n\r\n        if(email && password){\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(function(){\r\n                document.getElementById('create_success').style.display = \"block\";\r\n\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).set({\r\n                    Horrible:0,\r\n                    Bad:0,\r\n                    Average:0,\r\n                    Good:0,\r\n                    Great:0,\r\n                })\r\n                .then(function() {\r\n                    console.log(\"Document successfully written!\");\r\n                })\r\n                .catch(function(error) {\r\n                    console.error(\"Error writing document: \", error);\r\n                });\r\n\r\n                setTimeout(() => {\r\n                    this.props.history.push('/MoodCalendar/App');\r\n                }, 1000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState (() => {\r\n                    return {WarningMessage: \"\", ErrorCode : error.code.toString(), ErrorMessage: error.message.toString()};\r\n                })\r\n                document.getElementById('create_danger').style.display = \"block\";\r\n            });\r\n        }\r\n        else{\r\n            if(email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email & Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            document.getElementById('create_warning').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                    <h1>Create User</h1>\r\n                    </div>\r\n                    <form>\r\n                        <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"Email\"/>\r\n                        <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"login\" placeholder=\"Password\"/>\r\n                        <input type=\"button\" className=\"fadeIn fourth\" value=\"Create User\" onClick={ () => { this.CreateUser(document.getElementById('login').value, document.getElementById('password').value) }}/>\r\n\r\n                        <div id=\"formFooter\">\r\n                            <span className=\"underlineHover\"><Link to='/MoodCalendar'>Go Back To Login Page</Link></span>\r\n                            <div className=\"alert alert-success\" id=\"create_success\">\r\n                                <strong>Success!</strong> User Created\r\n                            </div>\r\n                            <div className=\"alert alert-warning\" id=\"create_warning\">\r\n                                <strong>Warning!</strong>{this.state.WarningMessage} Missing!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" id=\"create_danger\">\r\n                                <strong>Danger!</strong> {this.state.ErrorCode} {this.state.ErrorMessage}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nclass ColumnGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', Horrible: this.props.Horrible},\r\n            {name: 'Bad', Bad: this.props.Bad},\r\n            {name: 'Average', Average: this.props.Average},\r\n            {name: 'Good', Good: this.props.Good},\r\n            {name: 'Great', Great: this.props.Great}\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <h3>Column Graph</h3>\r\n                <BarChart width={600} height={300} data={data}\r\n                    margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                    <CartesianGrid />\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Legend />\r\n                    <Bar dataKey=\"Horrible\" fill=\"red\" />\r\n                    <Bar dataKey=\"Bad\" fill=\"orange\" />\r\n                    <Bar dataKey=\"Average\" fill=\"yellow\" />\r\n                    <Bar dataKey=\"Good\" fill=\"blue\" />\r\n                    <Bar dataKey=\"Great\" fill=\"green\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ColumnGraph);","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Count extends Component {\r\n    constructor(props){\r\n        super(props)\r\n          this.state = {\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const moods =  [\r\n            {\r\n                name: \"Horrible\", \r\n                color: \"Red\"\r\n            }, \r\n            {\r\n                name: \"Bad\", \r\n                color: \"Orange\"\r\n            },\r\n            {\r\n                name: \"Average\", \r\n                color: \"Yellow\"\r\n            },\r\n            {\r\n                name: \"Good\", \r\n                color: \"Blue\"\r\n            },\r\n            {\r\n                name: \"Great\", \r\n                color: \"Green\"\r\n            }\r\n        ]\r\n\r\n        let CountList = []\r\n\r\n        function CountOutput(countList, name, index, moodCount){\r\n            return countList.push(<tr key={index}>{name}: <td key={index} className={name+'Count'}>{moodCount}</td></tr>);\r\n        }\r\n\r\n        moods.map((mood, index) => {\r\n            if(mood.name === \"Horrible\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Horrible);\r\n            }\r\n            if(mood.name === \"Bad\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Bad);\r\n            }\r\n            if(mood.name === \"Average\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Average);\r\n            }\r\n            if(mood.name === \"Good\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Good);\r\n            }\r\n            if(mood.name === \"Great\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Great);\r\n            }\r\n\r\n            return -1;\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <h3>Count</h3>\r\n                <table>\r\n                    <tbody>\r\n                        {CountList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Count);\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nclass PieGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', value: this.props.Horrible}, \r\n            {name: 'Bad', value: this.props.Bad},\r\n            {name: 'Average', value: this.props.Average}, \r\n            {name: 'Good', value: this.props.Good}, \r\n            {name: 'Great', value: this.props.Great}\r\n        ];\r\n        const COLORS = ['red', 'orange', 'yellow', 'blue', 'green'];   \r\n\r\n        return (\r\n            <div>\r\n                <h3>Pie Graph</h3>\r\n                <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n                <Pie\r\n                dataKey=\"value\"\r\n                data={data} \r\n                cx={400} \r\n                cy={125} \r\n                innerRadius={60}\r\n                outerRadius={80} \r\n                fill=\"#8884d8\"\r\n                paddingAngle={5}\r\n                >\r\n                    {\r\n                        data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\r\n                    }\r\n                <Legend />\r\n                </Pie>\r\n            </PieChart>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(PieGraph);","import React, { Component } from 'react';\r\nimport ColumnGraph from './ColumnGraph';\r\nimport Count from './Count';\r\nimport PieGraph from './PieGraph'\r\n\r\nexport default class Stats extends Component{\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Stats\">\r\n                <div className=\"Count\">\r\n                    <Count />\r\n                </div>\r\n                <div className=\"ColumnGraph\">\r\n                    <ColumnGraph />\r\n                </div>\r\n                <div className=\"PieGraph\">\r\n                    <PieGraph />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { store } from '../../store';\r\nimport Modal from 'react-responsive-modal';\r\nimport firebase from '../../Firebase'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Mood extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mood: {\r\n                name: this.props.name || \"default\",\r\n                month: this.props.month,\r\n                day: this.props.day,\r\n                color: localStorage.getItem(this.props.month + ' ' + this.props.day) || this.props.color || \"white\",\r\n                note: localStorage.getItem(this.props.month + ' ' + this.props.day + ' note') || \"\"\r\n            },\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    onOpenModal = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    \r\n    dispatchIncreaseMoodToStore(colorToChangeTo){\r\n        switch(colorToChangeTo){\r\n            case \"red\":\r\n                store.dispatch({ type: 'INCREASE_HORRIBLE_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Horrible: thisDoc.data().Horrible + 1 });\r\n                })\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'INCREASE_BAD_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Bad: thisDoc.data().Bad + 1 });\r\n                })\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'INCREASE_AVERAGE_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Average: thisDoc.data().Average + 1 });\r\n                })\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'INCREASE_GOOD_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Good: thisDoc.data().Good + 1 });\r\n                })\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'INCREASE_GREAT_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Great: thisDoc.data().Great + 1 });\r\n                })\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    dispatchDecreaseMoodToStore(colorChangingFrom){\r\n        switch(colorChangingFrom){\r\n            case \"red\":\r\n                store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Horrible: thisDoc.data().Horrible - 1 });\r\n                })\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Bad: thisDoc.data().Bad - 1 });\r\n                })\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Average: thisDoc.data().Average - 1 });\r\n                })\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Good: thisDoc.data().Good - 1 });\r\n                })\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n                firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).get().then((thisDoc) => {\r\n                    firebase.firestore().collection(\"UserMoodCalendar\").doc(firebase.auth().currentUser.uid).update({Great: thisDoc.data().Great - 1 });\r\n                })\r\n                break;\r\n            default:\r\n        }\r\n\r\n    }\r\n\r\n    changeMood(colorToChangeTo, colorChangingFrom){\r\n        \r\n        this.dispatchIncreaseMoodToStore(colorToChangeTo);\r\n\r\n        this.dispatchDecreaseMoodToStore(colorChangingFrom);\r\n        \r\n        localStorage.setItem(this.props.month + ' ' + this.props.day, colorToChangeTo);\r\n        \r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:colorToChangeTo, note:this.state.mood.note}});\r\n    }\r\n\r\n    saveNote(){\r\n        const noteText =  document.getElementById(\"NoteTextArea\");\r\n        const noteSaved = document.getElementById(\"NoteSaved\");\r\n\r\n        localStorage.setItem(this.props.month + ' ' + this.props.day + ' note', noteText.value);\r\n\r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:this.state.mood.color, note: noteText.value}});\r\n        noteSaved.style.display = \"block\";\r\n\r\n    }\r\n\r\n    setTextArea(note){\r\n        setTimeout(function(){\r\n            if(document.getElementById(\"NoteTextArea\")){\r\n                document.getElementById(\"NoteTextArea\").value = note;\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    render() {\r\n\r\n        const buttonStyle = {\r\n            backgroundColor: \"white\"\r\n        };\r\n\r\n        const output = [];\r\n\r\n        let button;\r\n\r\n        buttonStyle.backgroundColor = this.state.mood.color;\r\n\r\n        const colorOfMood = localStorage.getItem(this.state.mood.month + ' ' + this.state.mood.day);\r\n\r\n        if(colorOfMood && !this.props.TOCButton){\r\n            buttonStyle.backgroundColor = colorOfMood;\r\n        }\r\n\r\n        if(this.props.LeapYearDay){\r\n            button = <button key={Math.random} className = \"MoodRating\" id=\"LeapYearDay\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }else if(this.props.TOCButton){\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} disabled></button>\r\n        }\r\n        else{\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }\r\n\r\n        if(this.props.name){\r\n            output.push(<span key={this.props.name} className=\"MoodName\">{this.props.name}</span>)\r\n        }\r\n\r\n        output.push(button);\r\n\r\n        return (\r\n            <div className=\"CalendarCell\">\r\n                <Modal onEntered={this.setTextArea(this.state.mood.note)} open={this.state.open} onClose={this.onCloseModal} center>\r\n                    <div className=\"ModalWindow\">\r\n                        <div className=\"LeftSideModal\">\r\n                            <div>\r\n                                <button className=\"ModalHorribleButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"red\", this.state.mood.color)}}></button>Horrible\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalBadButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"orange\", this.state.mood.color)}}></button>Bad\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalAverageButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"yellow\", this.state.mood.color)}}></button>Average \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGoodButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"blue\", this.state.mood.color)}}></button>Good\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGreatButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"green\", this.state.mood.color)}}></button>Great\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"RightSideModal\">\r\n                            <h2>Leave A Note About The Day</h2>\r\n                            <textarea id=\"NoteTextArea\">{this.state.note}</textarea>\r\n                            <button onClick={() => {this.saveNote()}}>Save Note</button>\r\n                            <span id=\"NoteSaved\">Note Saved</span>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        User: state.User\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Mood);","import React, { Component } from 'react';\r\nimport Mood from '../Calendar/Mood';\r\nimport { store } from '../../store'\r\n\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n      }\r\n      \r\n      handleChange(e){\r\n        const sel = document.getElementById(\"LeapYearSelect\");\r\n        let leapYearButton = document.getElementById(\"LeapYearDay\");\r\n        let text= sel.options[sel.selectedIndex].text;\r\n\r\n        if(text === \"Yes\"){\r\n          leapYearButton.style.display = \"\";\r\n        }\r\n        else{\r\n          leapYearButton.style.display = \"none\";\r\n\r\n          if(leapYearButton.style.backgroundColor === \"red\"){\r\n            store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"orange\"){\r\n            store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"yellow\"){\r\n            store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"blue\"){\r\n            store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"green\"){\r\n            store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n          }\r\n\r\n          leapYearButton.style.backgroundColor = \"white\";\r\n          localStorage.removeItem('Febuary 28');\r\n\r\n        }\r\n      }\r\n\r\n      render() {\r\n    \r\n        const ListOfMoods = [];\r\n        const moods =  [\r\n          {\r\n            name: \"Horrible\", \r\n            color: \"Red\"\r\n          }, \r\n          {\r\n            name: \"Bad\", \r\n            color: \"Orange\"\r\n          },\r\n          {\r\n            name: \"Average\", \r\n            color: \"Yellow\"\r\n          },\r\n          {\r\n            name: \"Good\", \r\n            color: \"Blue\"\r\n          },\r\n          {\r\n            name: \"Great\", \r\n            color: \"Green\"\r\n          }\r\n        ]\r\n    \r\n        moods.map((mood, index) => {\r\n          return ListOfMoods.push(<Mood TOCButton = {true} name={mood.name} color={mood.color} key ={index}/>);\r\n        })\r\n\r\n        return (\r\n          <div>\r\n            Leap Year\r\n            <select id=\"LeapYearSelect\" onChange={this.handleChange.bind(this)}>\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n              {ListOfMoods}\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ColumnOfNumbers extends Component {\r\n    render() {\r\n        const days = [];\r\n\r\n        for(let i = 0; i < 32; i++){\r\n            if(i === 0){\r\n                days.push(<div key ={i} className=\"CalendarCell FirstColumnNumber\"></div>);\r\n            }else{\r\n                days.push(<div key ={i} className=\"CalendarCell\">{i}</div>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"CalendarColumn\">{days}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from './Mood'\r\n\r\nexport default class Month extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            month: {\r\n                name: this.props.name,\r\n                days: this.props.days\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const buttons = [];\r\n\r\n        for(let i = 0; i < this.state.month.days; i++){\r\n            if(this.state.month.name === \"Febuary\" && i === 28){\r\n                buttons.push(<Mood LeapYearDay={true} TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }else{\r\n                buttons.push(<Mood TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className = \"CalendarColumn\">\r\n                <div className = \"CalendarCell\">\r\n                    {this.state.month.name[0]}\r\n                </div>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ColumnOfNumbers from './ColumnOfNumbers'\r\nimport Month from './Month'\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state = {\r\n                columnOfMonths : []\r\n        };\r\n\r\n        this.CreateArrayOfMonthsAndDays = this.CreateArrayOfMonthsAndDays.bind(this);\r\n    }\r\n\r\n    CreateArrayOfMonthsAndDays(){\r\n        const ListOfMonthsAndDays = [\r\n            {\r\n                name: \"January\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"Febuary\",\r\n                days: 29\r\n            },\r\n            {\r\n                name: \"March\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"April\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"May\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"June\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"July\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"August\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"September\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"October\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"November\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"December\",\r\n                days: 31\r\n            }\r\n        ]\r\n\r\n        const months = [];\r\n\r\n        ListOfMonthsAndDays.map((month, index) => {\r\n            return months.push(<Month name={month.name} days={month.days} key={index} />)\r\n        });\r\n\r\n        return months;\r\n    }\r\n\r\n    render() {\r\n\r\n        let months = [];\r\n\r\n        months = this.CreateArrayOfMonthsAndDays();\r\n\r\n        return (\r\n            <div className=\"Calendar\">\r\n                <ColumnOfNumbers />\r\n                {months}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from '../Firebase';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Logout extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n\r\n    }\r\n\r\n    Logout() {\r\n        firebase.auth().signOut()\r\n        .then(function(){\r\n        })\r\n        .catch(function(error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Link to='/MoodCalendar'>\r\n                <input type=\"button\" onClick={ () => { this.Logout() }} value=\"Logout\"/>\r\n            </Link>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\n\r\n//CSS\r\nimport './Contents/CSS/App.css';\r\n\r\n//Compoonents\r\nimport Stats from './Components/Stats'\r\nimport TableOfContents from './Components/TableOfContents'\r\nimport Calendar from './Components/Calendar'\r\nimport Logout from './HomePage/Logout'\r\n\r\nexport default class CalendarApp extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: true\r\n    };\r\n  }\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <div className=\"App\">\r\n            <div className=\"Buffer\">\r\n              <h2>Table of Contents</h2>\r\n              <Logout />\r\n              <TableOfContents />\r\n            </div>\r\n            <div className=\"Calendar\">\r\n              <h2>Calendar</h2>\r\n              <Calendar />\r\n            </div>\r\n            <div className=\"Buffer\">\r\n              <h2>Stats</h2>\r\n              <Stats />\r\n            </div>\r\n          </div>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//Components\r\nimport Home from '../HomePage/index'\r\nimport CreateUser from '../HomePage/CreateUser'\r\nimport MoodCalendar from '../CalendarApp'\r\n\r\nexport default class Routes extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Switch>\r\n                <Route exact path='/MoodCalendar/' component={Home}/>\r\n                <Route exact path='/MoodCalendar/Create' component={CreateUser}/>\r\n                <Route exact path='/MoodCalendar/App' component={MoodCalendar}/>\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Routes from './Routes'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n        <Routes />\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Contents/CSS/index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}