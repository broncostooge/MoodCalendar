{"version":3,"sources":["Firebase/index.js","HomePage/index.js","HomePage/CreateUser.js","reducers/index.js","store/index.js","HomePage/Logout.js","Components/Stats/ColumnGraph.js","Components/Stats/Count.js","Components/Stats/PieGraph.js","Components/Stats/index.js","Components/Calendar/Mood.js","Components/TableOfContents/index.js","Components/Calendar/ColumnOfNumbers.js","Components/Calendar/Month.js","Components/Calendar/index.js","CalendarApp.js","Routes/index.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","HomePage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","WarningMessage","ErrorCode","ErrorMessage","Login","bind","assertThisInitialized","document","getElementById","style","display","HideAlerts","email","password","_this2","setState","auth","signInWithEmailAndPassword","then","setTimeout","history","push","catch","error","code","toString","message","_this3","react_default","a","createElement","className","id","class","type","name","placeholder","value","onClick","Link","to","Component","CreateUser","createUserWithEmailAndPassword","_this4","initialState","Horrible","Bad","Average","Good","Great","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","arguments","length","undefined","action","newState","objectSpread","store","createStore","persistor","persistStore","Logout","signOut","errorCode","errorMessage","console","log","ColumnGraph","data","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","connect","Count","CountList","CountOutput","countList","index","moodCount","color","map","mood","PieGraph","COLORS","PieChart","onMouseEnter","onPieEnter","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","entry","Cell","Stats","Stats_Count","Stats_ColumnGraph","Stats_PieGraph","Mood","onOpenModal","open","onCloseModal","month","day","localStorage","getItem","note","colorToChangeTo","dispatch","colorChangingFrom","dispatchIncreaseMoodToStore","dispatchDecreaseMoodToStore","setItem","noteText","noteSaved","button","buttonStyle","backgroundColor","output","colorOfMood","TOCButton","LeapYearDay","Math","random","disabled","index_es","onEntered","setTextArea","onClose","center","changeMood","saveNote","_default","e","sel","leapYearButton","options","selectedIndex","text","removeItem","ListOfMoods","Mood_Mood","onChange","handleChange","ColumnOfNumbers","days","i","Month","buttons","columnOfMonths","CreateArrayOfMonthsAndDays","months","Month_Month","ColumnOfNumbers_ColumnOfNumbers","CalendarApp","es","integration_react","loading","Logout_Logout","TableOfContents_default","Calendar_default","Stats_Stats","Routes","Switch","Route","exact","path","component","Home","MoodCalendar","App","Routes_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7adc60f.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst REACT_APP_API_KEY=\"AIzaSyDwPbrYyKjoj9llXkcKL2EVCiy0hoVbKyw\"\r\nconst REACT_APP_AUTH_DOMAIN=\"moodcalendar-6676d.firebaseapp.com\"\r\nconst REACT_APP_DATABASE_URL=\"https://moodcalendar-6676d.firebaseio.com\"\r\nconst REACT_APP_PROJECT_ID=\"moodcalendar-6676d\"\r\nconst REACT_APP_STORAGE_BUCKET=\"moodcalendar-6676d.appspot.com\"\r\nconst REACT_APP_MESSAGING_SENDER_ID=\"7576934015\"\r\n\r\nconst config = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: REACT_APP_DATABASE_URL,\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: REACT_APP_MESSAGING_SENDER_ID\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\nimport '../Contents/CSS/LoginPage.css'\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            WarningMessage : \"\",\r\n            ErrorCode : \"\",\r\n            ErrorMessage : \"\"\r\n        };\r\n\r\n        this.Login = this.Login.bind(this);\r\n\r\n    }\r\n\r\n    HideAlerts(){\r\n        document.getElementById('login_warning').style.display = \"none\";\r\n        document.getElementById('login_danger').style.display = \"none\";\r\n        document.getElementById('login_success').style.display = \"none\";\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.HideAlerts();\r\n    }\r\n\r\n    Login(email, password) {\r\n\r\n        this.setState (() => {\r\n            return {WarningMessage: \"\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n        })\r\n\r\n        this.HideAlerts();\r\n\r\n        if(email && password){\r\n            firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n\r\n                document.getElementById('login_success').style.display = \"block\";\r\n                \r\n                setTimeout(() => {\r\n                    this.props.history.push('/MoodCalendar/App');\r\n                }, 1000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState (() => {\r\n                    return {WarningMessage: \"\", ErrorCode : error.code.toString(), ErrorMessage: error.message.toString()};\r\n                })\r\n                document.getElementById('login_danger').style.display = \"block\";\r\n            });\r\n        }\r\n        else{\r\n            if(email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email & Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            document.getElementById('login_warning').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div class=\"fadeIn first\">\r\n                    <h1>Mood Calendar Home Page</h1>\r\n                    </div>\r\n                    <form>\r\n\r\n                        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\"/>\r\n                        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\"/>\r\n                        <input type=\"button\" class=\"fadeIn fourth\" value=\"Log In\" onClick={ () => { this.Login(document.getElementById('login').value, document.getElementById('password').value) }}/>\r\n                        \r\n                        <div id=\"formFooter\">\r\n                            Not Registerd?<span class=\"underlineHover\"><Link to='/MoodCalendar/create'>Create an account</Link></span>\r\n                            <div className=\"alert alert-success\" id=\"login_success\">\r\n                                <strong>Success!</strong> Login Successfull\r\n                            </div>\r\n                            <div className=\"alert alert-warning\" id=\"login_warning\">\r\n                                <strong>Warning!</strong>{this.state.WarningMessage} Missing!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" id=\"login_danger\">\r\n                                <strong>Danger!</strong> {this.state.ErrorCode} {this.state.ErrorMessage}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\n\r\nexport default class CreateUser extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            WarningMessage : \"\",\r\n            ErrorCode : \"\",\r\n            ErrorMessage : \"\"\r\n        };\r\n\r\n        this.CreateUser = this.CreateUser.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById('create_warning').style.display = \"none\";\r\n        document.getElementById('create_danger').style.display = \"none\";\r\n        document.getElementById('create_success').style.display = \"none\";\r\n    }\r\n\r\n    CreateUser(email, password) {\r\n        \r\n        this.setState (() => {\r\n            return {WarningMessage: \"\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n        })\r\n\r\n        document.getElementById('create_warning').style.display = \"none\";\r\n        document.getElementById('create_danger').style.display = \"none\";\r\n        document.getElementById('create_success').style.display = \"none\";\r\n\r\n        if(email && password){\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(function(){\r\n                document.getElementById('create_success').style.display = \"block\";\r\n                setTimeout(() => {\r\n                    this.props.history.push('/');\r\n                }, 1000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState (() => {\r\n                    return {WarningMessage: \"\", ErrorCode : error.code.toString(), ErrorMessage: error.message.toString()};\r\n                })\r\n                document.getElementById('create_danger').style.display = \"block\";\r\n            });\r\n        }\r\n        else{\r\n            if(email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email & Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            document.getElementById('create_warning').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                    <h1>Create User</h1>\r\n                    </div>\r\n                    <form>\r\n                        <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"Email\"/>\r\n                        <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"login\" placeholder=\"Password\"/>\r\n                        <input type=\"button\" className=\"fadeIn fourth\" value=\"Create User\" onClick={ () => { this.CreateUser(document.getElementById('login').value, document.getElementById('password').value) }}/>\r\n\r\n                        <div id=\"formFooter\">\r\n                            <span className=\"underlineHover\"><Link to='/MoodCalendar/Login'>Go Back To Login Page</Link></span>\r\n                            <div className=\"alert alert-success\" id=\"create_success\">\r\n                                <strong>Success!</strong> User Created\r\n                            </div>\r\n                            <div className=\"alert alert-warning\" id=\"create_warning\">\r\n                                <strong>Warning!</strong>{this.state.WarningMessage} Missing!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" id=\"create_danger\">\r\n                                <strong>Danger!</strong> {this.state.ErrorCode} {this.state.ErrorMessage}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","const initialState = {\r\n    Horrible:0,\r\n    Bad:0,\r\n    Average:0,\r\n    Good:0,\r\n    Great:0\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    const newState = {...state};\r\n    \r\n    //HORRIBLE\r\n    if(action.type === 'INCREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible += 1;\r\n    }\r\n    if(action.type === 'DECREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible -= 1;\r\n    }\r\n\r\n    //BAD\r\n    if(action.type === 'INCREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad += 1;\r\n    }\r\n    if(action.type === 'DECREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad -= 1;\r\n    }\r\n\r\n    //AVERAGE\r\n    if(action.type === 'INCREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average += 1;\r\n    }\r\n    if(action.type === 'DECREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average -= 1;\r\n    }\r\n\r\n    //GOOD\r\n    if(action.type === 'INCREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good -= 1;\r\n    }\r\n\r\n    //GREAT\r\n    if(action.type === 'INCREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great -= 1;\r\n    }\r\n\r\n    return newState;\r\n}","import myReducer from '../reducers/index'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { createStore } from 'redux';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n   };\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, myReducer)\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","import React, { Component } from 'react';\r\nimport firebase from '../Firebase';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Logout extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n\r\n    }\r\n\r\n    Logout() {\r\n        firebase.auth().signOut()\r\n        .then(function(){\r\n        })\r\n        .catch(function(error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Link to='/MoodCalendar/Login'>\r\n                <input type=\"button\" onClick={ () => { this.Logout() }} value=\"Logout\"/>\r\n            </Link>\r\n        )\r\n    }\r\n}","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nclass ColumnGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', Horrible: this.props.Horrible},\r\n            {name: 'Bad', Bad: this.props.Bad},\r\n            {name: 'Average', Average: this.props.Average},\r\n            {name: 'Good', Good: this.props.Good},\r\n            {name: 'Great', Great: this.props.Great}\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <h3>Column Graph</h3>\r\n                <BarChart width={600} height={300} data={data}\r\n                    margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                    <CartesianGrid />\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Legend />\r\n                    <Bar dataKey=\"Horrible\" fill=\"red\" />\r\n                    <Bar dataKey=\"Bad\" fill=\"orange\" />\r\n                    <Bar dataKey=\"Average\" fill=\"yellow\" />\r\n                    <Bar dataKey=\"Good\" fill=\"blue\" />\r\n                    <Bar dataKey=\"Great\" fill=\"green\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ColumnGraph);","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Count extends Component {\r\n    constructor(props){\r\n        super(props)\r\n          this.state = {\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const moods =  [\r\n            {\r\n                name: \"Horrible\", \r\n                color: \"Red\"\r\n            }, \r\n            {\r\n                name: \"Bad\", \r\n                color: \"Orange\"\r\n            },\r\n            {\r\n                name: \"Average\", \r\n                color: \"Yellow\"\r\n            },\r\n            {\r\n                name: \"Good\", \r\n                color: \"Blue\"\r\n            },\r\n            {\r\n                name: \"Great\", \r\n                color: \"Green\"\r\n            }\r\n        ]\r\n\r\n        let CountList = []\r\n\r\n        function CountOutput(countList, name, index, moodCount){\r\n            return countList.push(<tr key={index}>{name}: <td key={index} className={name+'Count'}>{moodCount}</td></tr>);\r\n        }\r\n\r\n        moods.map((mood, index) => {\r\n            if(mood.name === \"Horrible\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Horrible);\r\n            }\r\n            if(mood.name === \"Bad\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Bad);\r\n            }\r\n            if(mood.name === \"Average\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Average);\r\n            }\r\n            if(mood.name === \"Good\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Good);\r\n            }\r\n            if(mood.name === \"Great\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Great);\r\n            }\r\n\r\n            return -1;\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <h3>Count</h3>\r\n                <table>\r\n                    <tbody>\r\n                        {CountList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Count);\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nclass PieGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', value: this.props.Horrible}, \r\n            {name: 'Bad', value: this.props.Bad},\r\n            {name: 'Average', value: this.props.Average}, \r\n            {name: 'Good', value: this.props.Good}, \r\n            {name: 'Great', value: this.props.Great}\r\n        ];\r\n        const COLORS = ['red', 'orange', 'yellow', 'blue', 'green'];   \r\n\r\n        return (\r\n            <div>\r\n                <h3>Pie Graph</h3>\r\n                <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n                <Pie\r\n                dataKey=\"value\"\r\n                data={data} \r\n                cx={400} \r\n                cy={125} \r\n                innerRadius={60}\r\n                outerRadius={80} \r\n                fill=\"#8884d8\"\r\n                paddingAngle={5}\r\n                >\r\n                    {\r\n                        data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\r\n                    }\r\n                <Legend />\r\n                </Pie>\r\n            </PieChart>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(PieGraph);","import React, { Component } from 'react';\r\nimport ColumnGraph from './ColumnGraph';\r\nimport Count from './Count';\r\nimport PieGraph from './PieGraph'\r\n\r\nexport default class Stats extends Component{\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Stats\">\r\n                <div className=\"Count\">\r\n                    <Count />\r\n                </div>\r\n                <div className=\"ColumnGraph\">\r\n                    <ColumnGraph />\r\n                </div>\r\n                <div className=\"PieGraph\">\r\n                    <PieGraph />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { store } from '../../store';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nexport default class Mood extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mood: {\r\n                name: this.props.name || \"default\",\r\n                month: this.props.month,\r\n                day: this.props.day,\r\n                color: localStorage.getItem(this.props.month + ' ' + this.props.day) || this.props.color || \"white\",\r\n                note: localStorage.getItem(this.props.month + ' ' + this.props.day + ' note') || \"\"\r\n            },\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    onOpenModal = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    \r\n    dispatchIncreaseMoodToStore(colorToChangeTo){\r\n        switch(colorToChangeTo){\r\n            case \"red\":\r\n                store.dispatch({ type: 'INCREASE_HORRIBLE_MOOD_COUNT' });\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'INCREASE_BAD_MOOD_COUNT' });\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'INCREASE_AVERAGE_MOOD_COUNT' });\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'INCREASE_GOOD_MOOD_COUNT' });\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'INCREASE_GREAT_MOOD_COUNT' });\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    dispatchDecreaseMoodToStore(colorChangingFrom){\r\n        switch(colorChangingFrom){\r\n            case \"red\":\r\n                store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n                break;\r\n            default:\r\n        }\r\n\r\n    }\r\n\r\n    changeMood(colorToChangeTo, colorChangingFrom){\r\n        \r\n        this.dispatchIncreaseMoodToStore(colorToChangeTo);\r\n\r\n        this.dispatchDecreaseMoodToStore(colorChangingFrom);\r\n        \r\n        localStorage.setItem(this.props.month + ' ' + this.props.day, colorToChangeTo);\r\n        \r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:colorToChangeTo, note:this.state.mood.note}});\r\n    }\r\n\r\n    saveNote(){\r\n        const noteText =  document.getElementById(\"NoteTextArea\");\r\n        const noteSaved = document.getElementById(\"NoteSaved\");\r\n\r\n        localStorage.setItem(this.props.month + ' ' + this.props.day + ' note', noteText.value);\r\n\r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:this.state.mood.color, note: noteText.value}});\r\n        noteSaved.style.display = \"block\";\r\n\r\n    }\r\n\r\n    setTextArea(note){\r\n        setTimeout(function(){\r\n            if(document.getElementById(\"NoteTextArea\")){\r\n                document.getElementById(\"NoteTextArea\").value = note;\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    render() {\r\n\r\n        const buttonStyle = {\r\n            backgroundColor: \"white\"\r\n        };\r\n\r\n        const output = [];\r\n\r\n        let button;\r\n\r\n        buttonStyle.backgroundColor = this.state.mood.color;\r\n\r\n        const colorOfMood = localStorage.getItem(this.state.mood.month + ' ' + this.state.mood.day);\r\n\r\n        if(colorOfMood && !this.props.TOCButton){\r\n            buttonStyle.backgroundColor = colorOfMood;\r\n        }\r\n\r\n        if(this.props.LeapYearDay){\r\n            button = <button key={Math.random} className = \"MoodRating\" id=\"LeapYearDay\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }else if(this.props.TOCButton){\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} disabled></button>\r\n        }\r\n        else{\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }\r\n\r\n        if(this.props.name){\r\n            output.push(<span key={this.props.name} className=\"MoodName\">{this.props.name}</span>)\r\n        }\r\n\r\n        output.push(button);\r\n\r\n        return (\r\n            <div className=\"CalendarCell\">\r\n                <Modal onEntered={this.setTextArea(this.state.mood.note)} open={this.state.open} onClose={this.onCloseModal} center>\r\n                    <div className=\"ModalWindow\">\r\n                        <div className=\"LeftSideModal\">\r\n                            <div>\r\n                                <button className=\"ModalHorribleButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"red\", this.state.mood.color)}}></button>Horrible\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalBadButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"orange\", this.state.mood.color)}}></button>Bad\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalAverageButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"yellow\", this.state.mood.color)}}></button>Average \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGoodButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"blue\", this.state.mood.color)}}></button>Good\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGreatButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"green\", this.state.mood.color)}}></button>Great\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"RightSideModal\">\r\n                            <h2>Leave A Note About The Day</h2>\r\n                            <textarea id=\"NoteTextArea\">{this.state.note}</textarea>\r\n                            <button onClick={() => {this.saveNote()}}>Save Note</button>\r\n                            <span id=\"NoteSaved\">Note Saved</span>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from '../Calendar/Mood';\r\nimport { store } from '../../store'\r\n\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n      }\r\n      \r\n      handleChange(e){\r\n        const sel = document.getElementById(\"LeapYearSelect\");\r\n        let leapYearButton = document.getElementById(\"LeapYearDay\");\r\n        let text= sel.options[sel.selectedIndex].text;\r\n\r\n        if(text === \"Yes\"){\r\n          leapYearButton.style.display = \"\";\r\n        }\r\n        else{\r\n          leapYearButton.style.display = \"none\";\r\n\r\n          if(leapYearButton.style.backgroundColor === \"red\"){\r\n            store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"orange\"){\r\n            store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"yellow\"){\r\n            store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"blue\"){\r\n            store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"green\"){\r\n            store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n          }\r\n\r\n          leapYearButton.style.backgroundColor = \"white\";\r\n          localStorage.removeItem('Febuary 28');\r\n\r\n        }\r\n      }\r\n\r\n      render() {\r\n    \r\n        const ListOfMoods = [];\r\n        const moods =  [\r\n          {\r\n            name: \"Horrible\", \r\n            color: \"Red\"\r\n          }, \r\n          {\r\n            name: \"Bad\", \r\n            color: \"Orange\"\r\n          },\r\n          {\r\n            name: \"Average\", \r\n            color: \"Yellow\"\r\n          },\r\n          {\r\n            name: \"Good\", \r\n            color: \"Blue\"\r\n          },\r\n          {\r\n            name: \"Great\", \r\n            color: \"Green\"\r\n          }\r\n        ]\r\n    \r\n        moods.map((mood, index) => {\r\n          return ListOfMoods.push(<Mood TOCButton = {true} name={mood.name} color={mood.color} key ={index}/>);\r\n        })\r\n\r\n        return (\r\n          <div>\r\n            Leap Year\r\n            <select id=\"LeapYearSelect\" onChange={this.handleChange.bind(this)}>\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n              {ListOfMoods}\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ColumnOfNumbers extends Component {\r\n    render() {\r\n        const days = [];\r\n\r\n        for(let i = 0; i < 32; i++){\r\n            if(i === 0){\r\n                days.push(<div key ={i} className=\"CalendarCell FirstColumnNumber\"></div>);\r\n            }else{\r\n                days.push(<div key ={i} className=\"CalendarCell\">{i}</div>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"CalendarColumn\">{days}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from './Mood'\r\n\r\nexport default class Month extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            month: {\r\n                name: this.props.name,\r\n                days: this.props.days\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const buttons = [];\r\n\r\n        for(let i = 0; i < this.state.month.days; i++){\r\n            if(this.state.month.name === \"Febuary\" && i === 28){\r\n                buttons.push(<Mood LeapYearDay={true} TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }else{\r\n                buttons.push(<Mood TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className = \"CalendarColumn\">\r\n                <div className = \"CalendarCell\">\r\n                    {this.state.month.name[0]}\r\n                </div>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ColumnOfNumbers from './ColumnOfNumbers'\r\nimport Month from './Month'\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state = {\r\n                columnOfMonths : []\r\n        };\r\n\r\n        this.CreateArrayOfMonthsAndDays = this.CreateArrayOfMonthsAndDays.bind(this);\r\n    }\r\n\r\n    CreateArrayOfMonthsAndDays(){\r\n        const ListOfMonthsAndDays = [\r\n            {\r\n                name: \"January\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"Febuary\",\r\n                days: 29\r\n            },\r\n            {\r\n                name: \"March\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"April\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"May\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"June\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"July\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"August\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"September\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"October\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"November\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"December\",\r\n                days: 31\r\n            }\r\n        ]\r\n\r\n        const months = [];\r\n\r\n        ListOfMonthsAndDays.map((month, index) => {\r\n            return months.push(<Month name={month.name} days={month.days} key={index} />)\r\n        });\r\n\r\n        return months;\r\n    }\r\n\r\n    render() {\r\n\r\n        let months = [];\r\n\r\n        months = this.CreateArrayOfMonthsAndDays();\r\n\r\n        return (\r\n            <div className=\"Calendar\">\r\n                <ColumnOfNumbers />\r\n                {months}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\nimport Logout from './HomePage/Logout'\r\n\r\n//CSS\r\nimport './Contents/CSS/App.css';\r\n\r\n//Compoonents\r\nimport Stats from './Components/Stats'\r\nimport TableOfContents from './Components/TableOfContents'\r\nimport Calendar from './Components/Calendar'\r\n\r\nexport default class CalendarApp extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: true\r\n    };\r\n  }\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <div className=\"App\">\r\n            <div className=\"Buffer\">\r\n              <h2>Table of Contents</h2>\r\n              <Logout />\r\n              <TableOfContents />\r\n            </div>\r\n            <div className=\"Calendar\">\r\n              <h2>Calendar</h2>\r\n              <Calendar />\r\n            </div>\r\n            <div className=\"Buffer\">\r\n              <h2>Stats</h2>\r\n              <Stats />\r\n            </div>\r\n          </div>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//Components\r\nimport Home from '../HomePage/index'\r\nimport CreateUser from '../HomePage/CreateUser'\r\nimport MoodCalendar from '../CalendarApp'\r\n\r\nexport default class Routes extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Switch>\r\n                <Route exact path='/MoodCalendar/' component={Home}/>\r\n                <Route exact path='/MoodCalendar/Create' component={CreateUser}/>\r\n                <Route exact path='/MoodCalendar/App' component={MoodCalendar}/>\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Routes from './Routes'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n        <Routes />\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Contents/CSS/index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}