{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["ColumnOfNumbers","days","i","push","react_default","a","createElement","key","className","Component","Mood","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mood","name","color","changeMood","bind","assertThisInitialized","_this2","current","next","map","colorCycle","index","setState","buttonStyle","backgroundColor","moodName","button","style","onClick","TOCButton","disabled","Month","_this3","month","buttons","App_Mood","Calendar","_this4","columnOfMonths","App_Month","App_ColumnOfNumbers","TableOfContents","_this5","ListOfMoods","Stats","_this6","App_Count","App_ColumnGraph","App_PieGraph","Count","_this7","CountList","ColumnGraph","_this8","PieGraph","_this9","App","_this10","MoodCounter","Horrible","Bad","Average","Good","Great","App_TableOfContents","App_Calendar","App_Stats","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cdc1cd49.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass ColumnOfNumbers extends Component {\r\n  render() {\r\n    const days = [];\r\n\r\n    for(let i = 0; i < 32; i++)\r\n    {\r\n      days.push(<div key ={i} className=\"CalendarCell\">{i}</div>);\r\n    }\r\n\r\n    return (\r\n      <div className=\"CalendarColumn\">{days}</div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Mood extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mood: {\r\n        name: this.props.name || \"default\",\r\n        color: this.props.color || \"white\"\r\n      }\r\n    };\r\n\r\n    this.changeMood = this.changeMood.bind(this);\r\n  }\r\n  \r\n  changeMood(){\r\n\r\n    const colorCycles = [ \r\n      {\r\n        current: \"white\",\r\n        next: \"red\"\r\n      },\r\n      {\r\n        current: \"red\",\r\n        next: \"orange\",\r\n      },\r\n      {\r\n        current: \"orange\",\r\n        next: \"yellow\",\r\n      },\r\n      {\r\n        current: \"yellow\",\r\n        next: \"blue\",\r\n      },\r\n      {\r\n        current: \"blue\",\r\n        next: \"green\",\r\n      },\r\n      {\r\n        current: \"green\",\r\n        next: \"white\",\r\n      }\r\n    ]\r\n\r\n    colorCycles.map((colorCycle, index) => {\r\n      if(this.state.mood.color === colorCycle.current)\r\n      {\r\n        return this.setState({mood:{name:this.state.mood.name, color: colorCycle.next}});\r\n      }\r\n      return null;\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const buttonStyle = {\r\n      backgroundColor: \"white\"\r\n    };\r\n\r\n    let color = this.state.mood.color;\r\n    let moodName = \"\";\r\n    let button = <button className=\"MoodRating\" style={buttonStyle} onClick={this.changeMood}></button>;\r\n\r\n    if(color){\r\n      buttonStyle.backgroundColor = color;\r\n    }\r\n\r\n    if(this.props.name){\r\n      moodName = <span className=\"MoodName\">{this.props.name}</span>;\r\n    }\r\n\r\n    if(this.props.TOCButton)\r\n    {\r\n      button = <button className=\"MoodRating\" style={buttonStyle} disabled></button>\r\n    }\r\n\r\n    return (\r\n      <div className=\"CalendarCell\">\r\n        {moodName}\r\n        {button}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Month extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      month: {\r\n        name: this.props.name,\r\n        days: this.props.days\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    \r\n    const buttons = [];\r\n\r\n    for(let i = 0; i < this.state.month.days; i++)\r\n    {\r\n      buttons.push(<Mood TOCButton = {false} key={i} />);\r\n    }\r\n\r\n    return (\r\n      <div className = \"CalendarColumn\">\r\n        <div className = \"CalendarCell\">\r\n          {this.state.month.name[0]}\r\n        </div>\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Calendar extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n    render() {\r\n      const ListOfMonthsAndDays = [\r\n        {\r\n          name: \"January\",\r\n          days: 31\r\n        },\r\n        {\r\n          name: \"Febuary\",\r\n          days: 29\r\n        },\r\n        {\r\n          name: \"March\",\r\n          days: 31\r\n        },\r\n        {\r\n          name: \"April\",\r\n          days: 30\r\n        },\r\n        {\r\n          name: \"May\",\r\n          days: 31\r\n        },\r\n        {\r\n          name: \"June\",\r\n          days: 30\r\n        },\r\n        {\r\n          name: \"July\",\r\n          days: 31\r\n        },\r\n        {\r\n          name: \"August\",\r\n          days: 31\r\n        },\r\n        {\r\n          name: \"September\",\r\n          days: 30\r\n        },\r\n        {\r\n          name: \"October\",\r\n          days: 31\r\n        },\r\n        {\r\n          name: \"November\",\r\n          days: 30\r\n        },\r\n        {\r\n          name: \"December\",\r\n          days: 31\r\n        }\r\n      ]\r\n      const columnOfMonths = [];\r\n\r\n      ListOfMonthsAndDays.map((month, index) => {\r\n        return columnOfMonths.push(<Month name={month.name} days={month.days} key={index} />)\r\n      });\r\n\r\n    return (\r\n      <div className=\"Calendar\">\r\n        <ColumnOfNumbers />\r\n        {columnOfMonths}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TableOfContents extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n  render() {\r\n\r\n    const ListOfMoods = [];\r\n    const moods =  [\r\n      {\r\n        name: \"Horrible\", \r\n        color: \"Red\"\r\n      }, \r\n      {\r\n        name: \"Bad\", \r\n        color: \"Orange\"\r\n      },\r\n      {\r\n        name: \"Average\", \r\n        color: \"Yellow\"\r\n      },\r\n      {\r\n        name: \"Good\", \r\n        color: \"Blue\"\r\n      },\r\n      {\r\n        name: \"Great\", \r\n        color: \"Green\"\r\n      }\r\n    ]\r\n\r\n    moods.map((mood, index) => {\r\n      return ListOfMoods.push(<Mood TOCButton = {true} name={mood.name} color={mood.color} key ={index}/>);\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        {ListOfMoods}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Stats extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Stats\">\r\n        <div className=\"Count\">\r\n          <Count />\r\n        </div>\r\n        <div className=\"ColumnGraph\">\r\n          <ColumnGraph />\r\n        </div>\r\n        <div className=\"PieGraph\">\r\n          <PieGraph />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Count extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const moods =  [\r\n      {\r\n        name: \"Horrible\", \r\n        color: \"Red\"\r\n      }, \r\n      {\r\n        name: \"Bad\", \r\n        color: \"Orange\"\r\n      },\r\n      {\r\n        name: \"Average\", \r\n        color: \"Yellow\"\r\n      },\r\n      {\r\n        name: \"Good\", \r\n        color: \"Blue\"\r\n      },\r\n      {\r\n        name: \"Great\", \r\n        color: \"Green\"\r\n      }\r\n    ]\r\n\r\n    let CountList = []\r\n\r\n    moods.map((mood, index) => {\r\n      return CountList.push(<tr key={index}>{mood.name}Count:<td key={index} className={mood.name+'Count'}>0</td></tr>)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <h3>Count</h3>\r\n        <table>\r\n          <tbody>\r\n            {CountList}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ColumnGraph extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h3>Column Graph</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass PieGraph extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n      <h3>Pie Graph</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      MoodCounter: {\r\n        Horrible: 0,\r\n        Bad: 0,\r\n        Average: 0,\r\n        Good: 0,\r\n        Great: 0\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"Buffer\">\r\n          <h2>Table of Contents</h2>\r\n          <TableOfContents />\r\n        </div>\r\n        <div className=\"Calendar\">\r\n        <h2>Calendar</h2>\r\n          <Calendar />\r\n        </div>\r\n        <div className=\"Buffer\">\r\n          <h2>Stats</h2>\r\n          <Stats />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}