{"version":3,"sources":["Firebase/index.js","reducers/index.js","store/index.js","HomePage/index.js","HomePage/CreateUser.js","HomePage/Logout.js","Components/Stats/ColumnGraph.js","Components/Stats/Count.js","Components/Stats/PieGraph.js","Components/Stats/index.js","Components/Calendar/Mood.js","Components/TableOfContents/index.js","Components/Calendar/ColumnOfNumbers.js","Components/Calendar/Month.js","Components/Calendar/index.js","CalendarApp.js","Routes/index.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","initialState","Horrible","Bad","Average","Good","Great","authenticated","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","state","arguments","length","undefined","action","newState","Object","objectSpread","type","store","createStore","persistor","persistStore","HomePage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","Login","bind","assertThisInitialized","username","password","auth","signInWithEmailAndPassword","then","dispatch","catch","error","errorCode","code","errorMessage","message","console","log","_this2","react_default","a","createElement","id","placeholder","Link","to","onClick","document","getElementById","value","Component","CreateUser","email","createUserWithEmailAndPassword","alert","Logout","signOut","ColumnGraph","data","name","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","connect","Count","CountList","CountOutput","countList","index","moodCount","push","className","color","map","mood","PieGraph","COLORS","PieChart","onMouseEnter","onPieEnter","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","entry","Cell","Stats","Stats_Count","Stats_ColumnGraph","Stats_PieGraph","Mood","onOpenModal","setState","open","onCloseModal","month","day","localStorage","getItem","note","colorToChangeTo","colorChangingFrom","dispatchIncreaseMoodToStore","dispatchDecreaseMoodToStore","setItem","noteText","noteSaved","style","display","setTimeout","button","buttonStyle","backgroundColor","output","colorOfMood","TOCButton","LeapYearDay","Math","random","disabled","index_es","onEntered","setTextArea","onClose","center","changeMood","saveNote","_default","e","sel","leapYearButton","options","selectedIndex","text","removeItem","ListOfMoods","Mood_Mood","onChange","handleChange","ColumnOfNumbers","days","i","Month","buttons","columnOfMonths","CreateArrayOfMonthsAndDays","months","Month_Month","ColumnOfNumbers_ColumnOfNumbers","CalendarApp","react_redux_es","integration_react","loading","Logout_Logout","TableOfContents_default","Calendar_default","Stats_Stats","Routes","MoodCalendarRoute","Route","exact","path","component","MoodCalendar","Home","Switch","App","src_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8TASMA,EAAS,CACXC,OARoB,0CASpBC,WARwB,qCASxBC,YARyB,4CASzBC,UARuB,qBASvBC,cAR2B,iCAS3BC,kBARgC,cAUpCC,IAASC,cAAcR,GAERO,QAAf,WCnBME,EAAe,CACjBC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,eAAe,wDCAbC,EAAgB,CAClBC,IAAK,OACLC,QAASA,IACTC,gBAAiBC,KAGfC,EAAmBC,YAAeN,EDHzB,WAAkC,IAAjCO,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBf,EAAckB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvCE,EAAQC,OAAAC,EAAA,EAAAD,CAAA,GAAON,GAkDrB,MA/CmB,iCAAhBI,EAAOI,OACNH,EAASlB,UAAY,GAEN,iCAAhBiB,EAAOI,OACNH,EAASlB,UAAY,GAIN,4BAAhBiB,EAAOI,OACNH,EAASjB,KAAO,GAED,4BAAhBgB,EAAOI,OACNH,EAASjB,KAAO,GAID,gCAAhBgB,EAAOI,OACNH,EAAShB,SAAW,GAEL,gCAAhBe,EAAOI,OACNH,EAAShB,SAAW,GAIL,6BAAhBe,EAAOI,OACNH,EAASf,MAAQ,GAEF,6BAAhBc,EAAOI,OACNH,EAASf,MAAQ,GAIF,8BAAhBc,EAAOI,OACNH,EAASd,OAAS,GAEH,8BAAhBa,EAAOI,OACNH,EAASd,OAAS,GAIH,0BAAhBa,EAAOI,OACNH,EAASb,eAAgB,GAEV,2BAAhBY,EAAOI,OACNH,EAASb,eAAgB,GAGtBa,IC9CEI,EAAQC,YAAYZ,GACpBa,EAAYC,YAAaH,GCVjBI,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAJ,IACfE,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAO,GAAAO,KAAAH,KAAMH,KACDd,MAAQ,GAGbe,EAAKM,MAAQN,EAAKM,MAAMC,KAAXhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAS,KALEA,qEASbS,EAAUC,GACZzC,EAAS0C,OAAOC,2BAA2BH,EAAUC,GACpDG,KAAK,WACFnB,EAAMoB,SAAS,CAAErB,KAAM,4BAE1BsB,MAAM,SAASC,GACZ,IAAIC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAEzBC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,sCAIX,IAAAI,EAAArB,KACL,OACIsB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOC,GAAG,gBAAgBlC,KAAK,OAAOmC,YAAY,aAClDJ,EAAAC,EAAAC,cAAA,SAAOC,GAAG,gBAAgBlC,KAAK,WAAWmC,YAAY,aACtDJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,iBACLN,EAAAC,EAAAC,cAAA,UAAQK,QAAU,WAAQR,EAAKjB,MAAM0B,SAASC,eAAe,iBAAiBC,MAAOF,SAASC,eAAe,iBAAiBC,SAA9H,WAEJV,EAAAC,EAAAC,cAAA,6BACcF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,WAAT,+BAnCIK,aCDjBC,cACjB,SAAAA,EAAYrC,GAAM,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAkC,IACdpC,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAA6C,GAAA/B,KAAAH,KAAMH,KACDd,MAAQ,GAIbe,EAAKoC,WAAapC,EAAKoC,WAAW7B,KAAhBhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAS,KANJA,0EAUPqC,EAAO3B,GACdzC,EAAS0C,OAAO2B,+BAA+BD,EAAO3B,GACrDG,KAAK,WACF0B,MAAM,SAAWF,EAAQ,cAE5BtB,MAAM,SAASC,GACZ,IAAIC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAEzBC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,sCAIZ,IAAAI,EAAArB,KACJ,OACIsB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,SAAOC,GAAG,cAAclC,KAAK,OAAOmC,YAAY,UAChDJ,EAAAC,EAAAC,cAAA,SAAOC,GAAG,iBAAiBlC,KAAK,OAAOmC,YAAY,aACnDJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,KACLN,EAAAC,EAAAC,cAAA,UAAQK,QAAU,WAAQR,EAAKa,WAAWJ,SAASC,eAAe,eAAeC,MAAOF,SAASC,eAAe,kBAAkBC,SAAlI,oBAjCgBC,6BCCnBK,cACjB,SAAAA,EAAYzC,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAsC,IACfxC,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAiD,GAAAnC,KAAAH,KAAMH,KACDd,MAAQ,GAGbe,EAAKwC,OAASxC,EAAKwC,OAAOjC,KAAZhB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAS,KALCA,wEAUf/B,EAAS0C,OAAO8B,UACf5B,KAAK,WACFnB,EAAMoB,SAAS,CAAErB,KAAM,6BAE1BsB,MAAM,SAASC,GACZ,IAAIC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAEzBC,QAAQC,IAAIL,GACZI,QAAQC,IAAIH,sCAIZ,IAAAI,EAAArB,KACJ,OACIsB,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,KACLN,EAAAC,EAAAC,cAAA,UAAQK,QAAU,WAAQR,EAAKiB,WAA/B,kBA3BoBL,qFCD9BO,cACF,SAAAA,EAAY3C,GAAM,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAwC,IACd1C,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAmD,GAAArC,KAAAH,KAAMH,KACDd,MAAQ,GAFCe,wEAOd,IAAM2C,EAAO,CACT,CAACC,KAAM,WAAYxE,SAAU8B,KAAKH,MAAM3B,UACxC,CAACwE,KAAM,MAAOvE,IAAK6B,KAAKH,MAAM1B,KAC9B,CAACuE,KAAM,UAAWtE,QAAS4B,KAAKH,MAAMzB,SACtC,CAACsE,KAAM,OAAQrE,KAAM2B,KAAKH,MAAMxB,MAChC,CAACqE,KAAM,QAASpE,MAAO0B,KAAKH,MAAMvB,QAGtC,OACIgD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAAKJ,KAAMA,EACrCK,OAAQ,CAACC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAC9C5B,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,QAAQ,SACf/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,MACAhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,MACAjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKJ,QAAQ,WAAWK,KAAK,QAC7BpC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKJ,QAAQ,MAAMK,KAAK,WACxBpC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKJ,QAAQ,UAAUK,KAAK,WAC5BpC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKJ,QAAQ,OAAOK,KAAK,SACzBpC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAKJ,QAAQ,QAAQK,KAAK,mBA9BpBzB,aA+CX0B,kBAVf,SAAyB5E,GACrB,MAAO,CACHb,SAAUa,EAAMb,SAChBC,IAAIY,EAAMZ,IACVC,QAAQW,EAAMX,QACdC,KAAKU,EAAMV,KACXC,MAAMS,EAAMT,QAILqF,CAAyBnB,GChDlCoB,cACF,SAAAA,EAAY/D,GAAM,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAA4D,IACd9D,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAuE,GAAAzD,KAAAH,KAAMH,KACCd,MAAQ,GAFDe,wEAMT,IAAAuB,EAAArB,KAwBD6D,EAAY,GAEhB,SAASC,EAAYC,EAAWrB,EAAMsB,EAAOC,GACzC,OAAOF,EAAUG,KAAK5C,EAAAC,EAAAC,cAAA,MAAI/C,IAAKuF,GAAQtB,EAAjB,KAAwBpB,EAAAC,EAAAC,cAAA,MAAI/C,IAAKuF,EAAOG,UAAWzB,EAAK,SAAUuB,KAuB5F,MAjDe,CACX,CACIvB,KAAM,WACN0B,MAAO,OAEX,CACI1B,KAAM,MACN0B,MAAO,UAEX,CACI1B,KAAM,UACN0B,MAAO,UAEX,CACI1B,KAAM,OACN0B,MAAO,QAEX,CACI1B,KAAM,QACN0B,MAAO,UAUTC,IAAI,SAACC,EAAMN,GAiBb,MAhBiB,aAAdM,EAAK5B,MACJoB,EAAYD,EAAWS,EAAK5B,KAAMsB,EAAO3C,EAAKxB,MAAM3B,UAEvC,QAAdoG,EAAK5B,MACJoB,EAAYD,EAAWS,EAAK5B,KAAMsB,EAAO3C,EAAKxB,MAAM1B,KAEvC,YAAdmG,EAAK5B,MACJoB,EAAYD,EAAWS,EAAK5B,KAAMsB,EAAO3C,EAAKxB,MAAMzB,SAEvC,SAAdkG,EAAK5B,MACJoB,EAAYD,EAAWS,EAAK5B,KAAMsB,EAAO3C,EAAKxB,MAAMxB,MAEvC,UAAdiG,EAAK5B,MACJoB,EAAYD,EAAWS,EAAK5B,KAAMsB,EAAO3C,EAAKxB,MAAMvB,QAGhD,IAIRgD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,aACKqC,YA9DL5B,aAgFL0B,kBAVf,SAAyB5E,GACrB,MAAO,CACHb,SAAUa,EAAMb,SAChBC,IAAIY,EAAMZ,IACVC,QAAQW,EAAMX,QACdC,KAAKU,EAAMV,KACXC,MAAMS,EAAMT,QAILqF,CAAyBC,8BC/ElCW,cACF,SAAAA,EAAY1E,GAAM,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAuE,IACdzE,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAkF,GAAApE,KAAAH,KAAMH,KACDd,MAAQ,GAFCe,wEAOd,IAAM2C,EAAO,CACT,CAACC,KAAM,WAAYV,MAAOhC,KAAKH,MAAM3B,UACrC,CAACwE,KAAM,MAAOV,MAAOhC,KAAKH,MAAM1B,KAChC,CAACuE,KAAM,UAAWV,MAAOhC,KAAKH,MAAMzB,SACpC,CAACsE,KAAM,OAAQV,MAAOhC,KAAKH,MAAMxB,MACjC,CAACqE,KAAM,QAASV,MAAOhC,KAAKH,MAAMvB,QAEhCkG,EAAS,CAAC,MAAO,SAAU,SAAU,OAAQ,SAEnD,OACIlD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAU7B,MAAO,IAAKC,OAAQ,IAAK6B,aAAc1E,KAAK2E,YACtDrD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CACAvB,QAAQ,QACRZ,KAAMA,EACNoC,GAAI,IACJC,GAAI,IACJC,YAAa,GACbC,YAAa,GACbtB,KAAK,UACLuB,aAAc,GAGNxC,EAAK4B,IAAI,SAACa,EAAOlB,GAAR,OAAkB1C,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAM1G,IAAKuF,EAAON,KAAMc,EAAOR,EAAQQ,EAAOvF,YAEjFqC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,gBAlCOvB,aAoDR0B,kBAVf,SAAyB5E,GACrB,MAAO,CACHb,SAAUa,EAAMb,SAChBC,IAAIY,EAAMZ,IACVC,QAAQW,EAAMX,QACdC,KAAKU,EAAMV,KACXC,MAAMS,EAAMT,QAILqF,CAAyBY,GCnDnBa,mLAGb,OACI9D,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,SACX7C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,SACX7C,EAAAC,EAAAC,cAAC6D,EAAD,OAEJ/D,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,eACX7C,EAAAC,EAAAC,cAAC8D,EAAD,OAEJhE,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,YACX7C,EAAAC,EAAAC,cAAC+D,EAAD,eAZetD,uBCDduD,eACjB,SAAAA,EAAY3F,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAwF,IACf1F,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAmG,GAAArF,KAAAH,KAAMH,KAaV4F,YAAc,WACV3F,EAAK4F,SAAS,CAAEC,MAAM,KAfP7F,EAkBnB8F,aAAe,WACX9F,EAAK4F,SAAS,CAAEC,MAAM,KAjBtB7F,EAAKf,MAAQ,CACTuF,KAAM,CACF5B,KAAM5C,EAAKD,MAAM6C,MAAQ,UACzBmD,MAAO/F,EAAKD,MAAMgG,MAClBC,IAAKhG,EAAKD,MAAMiG,IAChB1B,MAAO2B,aAAaC,QAAQlG,EAAKD,MAAMgG,MAAQ,IAAM/F,EAAKD,MAAMiG,MAAQhG,EAAKD,MAAMuE,OAAS,QAC5F6B,KAAMF,aAAaC,QAAQlG,EAAKD,MAAMgG,MAAQ,IAAM/F,EAAKD,MAAMiG,IAAM,UAAY,IAErFH,MAAM,GAVK7F,2FAsBSoG,GACxB,OAAOA,GACH,IAAK,MACD1G,EAAMoB,SAAS,CAAErB,KAAM,iCACvB,MACJ,IAAK,SACDC,EAAMoB,SAAS,CAAErB,KAAM,4BACvB,MACJ,IAAK,SACDC,EAAMoB,SAAS,CAAErB,KAAM,gCACvB,MACJ,IAAK,OACDC,EAAMoB,SAAS,CAAErB,KAAM,6BACvB,MACJ,IAAK,QACDC,EAAMoB,SAAS,CAAErB,KAAM,mFAMP4G,GACxB,OAAOA,GACH,IAAK,MACD3G,EAAMoB,SAAS,CAAErB,KAAM,iCACvB,MACJ,IAAK,SACDC,EAAMoB,SAAS,CAAErB,KAAM,4BACvB,MACJ,IAAK,SACDC,EAAMoB,SAAS,CAAErB,KAAM,gCACvB,MACJ,IAAK,OACDC,EAAMoB,SAAS,CAAErB,KAAM,6BACvB,MACJ,IAAK,QACDC,EAAMoB,SAAS,CAAErB,KAAM,kEAOxB2G,EAAiBC,GAExBnG,KAAKoG,4BAA4BF,GAEjClG,KAAKqG,4BAA4BF,GAEjCJ,aAAaO,QAAQtG,KAAKH,MAAMgG,MAAQ,IAAM7F,KAAKH,MAAMiG,IAAKI,GAE9DlG,KAAK0F,SAAS,CAACpB,KAAK,CAAC5B,KAAK1C,KAAKjB,MAAMuF,KAAK5B,KAAMmD,MAAM7F,KAAKjB,MAAMuF,KAAKuB,MAAOC,IAAI9F,KAAKjB,MAAMuF,KAAKwB,IAAK1B,MAAM8B,EAAiBD,KAAKjG,KAAKjB,MAAMuF,KAAK2B,2CAIlJ,IAAMM,EAAYzE,SAASC,eAAe,gBACpCyE,EAAY1E,SAASC,eAAe,aAE1CgE,aAAaO,QAAQtG,KAAKH,MAAMgG,MAAQ,IAAM7F,KAAKH,MAAMiG,IAAM,QAASS,EAASvE,OAEjFhC,KAAK0F,SAAS,CAACpB,KAAK,CAAC5B,KAAK1C,KAAKjB,MAAMuF,KAAK5B,KAAMmD,MAAM7F,KAAKjB,MAAMuF,KAAKuB,MAAOC,IAAI9F,KAAKjB,MAAMuF,KAAKwB,IAAK1B,MAAMpE,KAAKjB,MAAMuF,KAAKF,MAAO6B,KAAMM,EAASvE,SAClJwE,EAAUC,MAAMC,QAAU,4CAIlBT,GACRU,WAAW,WACJ7E,SAASC,eAAe,kBACvBD,SAASC,eAAe,gBAAgBC,MAAQiE,IAErD,qCAGE,IAQDW,EARCvF,EAAArB,KAEC6G,EAAc,CAChBC,gBAAiB,SAGfC,EAAS,GAIfF,EAAYC,gBAAkB9G,KAAKjB,MAAMuF,KAAKF,MAE9C,IAAM4C,EAAcjB,aAAaC,QAAQhG,KAAKjB,MAAMuF,KAAKuB,MAAQ,IAAM7F,KAAKjB,MAAMuF,KAAKwB,KAqBvF,OAnBGkB,IAAgBhH,KAAKH,MAAMoH,YAC1BJ,EAAYC,gBAAkBE,GAI9BJ,EADD5G,KAAKH,MAAMqH,YACD5F,EAAAC,EAAAC,cAAA,UAAQ/C,IAAK0I,KAAKC,OAAQjD,UAAY,aAAa1C,GAAG,cAAcgF,MAAOI,EAAahF,QAAS,WAAOR,EAAKoE,iBACjHzF,KAAKH,MAAMoH,UACP3F,EAAAC,EAAAC,cAAA,UAAQ/C,IAAK0I,KAAKC,OAAQjD,UAAU,aAAasC,MAAOI,EAAaQ,UAAQ,IAG7E/F,EAAAC,EAAAC,cAAA,UAAQ/C,IAAK0I,KAAKC,OAAQjD,UAAU,aAAasC,MAAOI,EAAahF,QAAS,WAAOR,EAAKoE,iBAGpGzF,KAAKH,MAAM6C,MACVqE,EAAO7C,KAAK5C,EAAAC,EAAAC,cAAA,QAAM/C,IAAKuB,KAAKH,MAAM6C,KAAMyB,UAAU,YAAYnE,KAAKH,MAAM6C,OAG7EqE,EAAO7C,KAAK0C,GAGRtF,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,gBACX7C,EAAAC,EAAAC,cAAC8F,GAAA,EAAD,CAAOC,UAAWvH,KAAKwH,YAAYxH,KAAKjB,MAAMuF,KAAK2B,MAAON,KAAM3F,KAAKjB,MAAM4G,KAAM8B,QAASzH,KAAK4F,aAAc8B,QAAM,GAC/GpG,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,eACX7C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,iBACX7C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,6CAA6CtC,QAAS,WAAOR,EAAKsG,WAAW,MAAOtG,EAAKtC,MAAMuF,KAAKF,UAD1H,YAGA9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,wCAAwCtC,QAAS,WAAOR,EAAKsG,WAAW,SAAUtG,EAAKtC,MAAMuF,KAAKF,UADxH,OAGA9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,4CAA4CtC,QAAS,WAAOR,EAAKsG,WAAW,SAAUtG,EAAKtC,MAAMuF,KAAKF,UAD5H,WAGA9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,yCAAyCtC,QAAS,WAAOR,EAAKsG,WAAW,OAAQtG,EAAKtC,MAAMuF,KAAKF,UADvH,QAGA9C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ2C,UAAU,0CAA0CtC,QAAS,WAAOR,EAAKsG,WAAW,QAAStG,EAAKtC,MAAMuF,KAAKF,UADzH,UAIJ9C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,kBACX7C,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,YAAUC,GAAG,gBAAgBzB,KAAKjB,MAAMkH,MACxC3E,EAAAC,EAAAC,cAAA,UAAQK,QAAS,WAAOR,EAAKuG,aAA7B,aACAtG,EAAAC,EAAAC,cAAA,QAAMC,GAAG,aAAT,iBAIXsF,UA9JiB9E,4BCC9B,SAAA4F,EAAYhI,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAA6H,IACf/H,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAwI,GAAA1H,KAAAH,KAAMH,KACDd,MAAQ,GAFEe,4EAMJgI,GACX,IAAMC,EAAMjG,SAASC,eAAe,kBAChCiG,EAAiBlG,SAASC,eAAe,eAGjC,QAFFgG,EAAIE,QAAQF,EAAIG,eAAeC,KAGvCH,EAAevB,MAAMC,QAAU,IAG/BsB,EAAevB,MAAMC,QAAU,OAEa,QAAzCsB,EAAevB,MAAMK,gBACtBtH,EAAMoB,SAAS,CAAErB,KAAM,iCAEwB,WAAzCyI,EAAevB,MAAMK,gBAC3BtH,EAAMoB,SAAS,CAAErB,KAAM,4BAEwB,WAAzCyI,EAAevB,MAAMK,gBAC3BtH,EAAMoB,SAAS,CAAErB,KAAM,gCAEwB,SAAzCyI,EAAevB,MAAMK,gBAC3BtH,EAAMoB,SAAS,CAAErB,KAAM,6BAEwB,UAAzCyI,EAAevB,MAAMK,iBAC3BtH,EAAMoB,SAAS,CAAErB,KAAM,8BAGzByI,EAAevB,MAAMK,gBAAkB,QACvCf,aAAaqC,WAAW,gDAO1B,IAAMC,EAAc,GA4BpB,MA3Be,CACb,CACE3F,KAAM,WACN0B,MAAO,OAET,CACE1B,KAAM,MACN0B,MAAO,UAET,CACE1B,KAAM,UACN0B,MAAO,UAET,CACE1B,KAAM,OACN0B,MAAO,QAET,CACE1B,KAAM,QACN0B,MAAO,UAILC,IAAI,SAACC,EAAMN,GACf,OAAOqE,EAAYnE,KAAK5C,EAAAC,EAAAC,cAAC8G,GAAD,CAAMrB,WAAa,EAAMvE,KAAM4B,EAAK5B,KAAM0B,MAAOE,EAAKF,MAAO3F,IAAMuF,OAI3F1C,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,UAAQC,GAAG,iBAAiB8G,SAAUvI,KAAKwI,aAAanI,KAAKL,OAC3DsB,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,OAAd,OACAV,EAAAC,EAAAC,cAAA,UAAQQ,MAAM,MAAd,OAECqG,UA7EcpG,aCFRwG,oLAIb,IAFA,IAAMC,EAAO,GAELC,EAAI,EAAGA,EAAI,GAAIA,IACV,IAANA,EACCD,EAAKxE,KAAK5C,EAAAC,EAAAC,cAAA,OAAK/C,IAAMkK,EAAGxE,UAAU,oCAElCuE,EAAKxE,KAAK5C,EAAAC,EAAAC,cAAA,OAAK/C,IAAMkK,EAAGxE,UAAU,gBAAgBwE,IAI1D,OACIrH,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,kBAAkBuE,UAbAzG,aCCxB2G,eACjB,SAAAA,EAAY/I,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAA4I,IACf9I,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAuJ,GAAAzI,KAAAH,KAAMH,KACDd,MAAQ,CACT8G,MAAO,CACHnD,KAAM5C,EAAKD,MAAM6C,KACjBgG,KAAM5I,EAAKD,MAAM6I,OALV5I,wEAaf,IAFA,IAAM+I,EAAU,GAERF,EAAI,EAAGA,EAAI3I,KAAKjB,MAAM8G,MAAM6C,KAAMC,IACT,YAA1B3I,KAAKjB,MAAM8G,MAAMnD,MAA4B,KAANiG,EACtCE,EAAQ3E,KAAK5C,EAAAC,EAAAC,cAAC8G,GAAD,CAAMpB,aAAa,EAAMD,WAAa,EAAOxI,IAAKkK,EAAG9C,MAAO7F,KAAKjB,MAAM8G,MAAMnD,KAAMoD,IAAK6C,KAErGE,EAAQ3E,KAAK5C,EAAAC,EAAAC,cAAC8G,GAAD,CAAMrB,WAAa,EAAOxI,IAAKkK,EAAG9C,MAAO7F,KAAKjB,MAAM8G,MAAMnD,KAAMoD,IAAK6C,KAI1F,OACIrH,EAAAC,EAAAC,cAAA,OAAK2C,UAAY,kBACb7C,EAAAC,EAAAC,cAAA,OAAK2C,UAAY,gBACZnE,KAAKjB,MAAM8G,MAAMnD,KAAK,IAE1BmG,UA3BkB5G,4BCE/B,SAAA4F,EAAYhI,GAAM,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAA6H,IACd/H,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAwI,GAAA1H,KAAAH,KAAMH,KACGd,MAAQ,CACT+J,eAAiB,IAGzBhJ,EAAKiJ,2BAA6BjJ,EAAKiJ,2BAA2B1I,KAAhChB,OAAAiB,EAAA,EAAAjB,QAAAiB,EAAA,EAAAjB,CAAAS,KANpBA,4FAUd,IAmDMkJ,EAAS,GAMf,MAzD4B,CACxB,CACItG,KAAM,UACNgG,KAAM,IAEV,CACIhG,KAAM,UACNgG,KAAM,IAEV,CACIhG,KAAM,QACNgG,KAAM,IAEV,CACIhG,KAAM,QACNgG,KAAM,IAEV,CACIhG,KAAM,MACNgG,KAAM,IAEV,CACIhG,KAAM,OACNgG,KAAM,IAEV,CACIhG,KAAM,OACNgG,KAAM,IAEV,CACIhG,KAAM,SACNgG,KAAM,IAEV,CACIhG,KAAM,YACNgG,KAAM,IAEV,CACIhG,KAAM,UACNgG,KAAM,IAEV,CACIhG,KAAM,WACNgG,KAAM,IAEV,CACIhG,KAAM,WACNgG,KAAM,KAMMrE,IAAI,SAACwB,EAAO7B,GAC5B,OAAOgF,EAAO9E,KAAK5C,EAAAC,EAAAC,cAACyH,GAAD,CAAOvG,KAAMmD,EAAMnD,KAAMgG,KAAM7C,EAAM6C,KAAMjK,IAAKuF,OAGhEgF,mCAKP,IAAIA,EAIJ,OAFAA,EAAShJ,KAAK+I,6BAGVzH,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,YACX7C,EAAAC,EAAAC,cAAC0H,GAAD,MACCF,UAhFY/G,aCURkH,eACnB,SAAAA,EAAYtJ,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAmJ,IACjBrJ,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAA8J,GAAAhJ,KAAAH,KAAMH,KAMR+F,aAAe,WACb9F,EAAK4F,SAAS,CAAEC,MAAM,KARL7F,EAWnB2F,YAAc,WACZ3F,EAAK4F,SAAS,CAAEC,MAAM,KAVtB7F,EAAKf,MAAQ,CACX4G,MAAM,GAHS7F,wEAiBjB,OACEwB,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU5J,MAAOA,GACf8B,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAaC,QAAS,KAAM5J,UAAWA,GACrC4B,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,OACb7C,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,UACb7C,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAC+H,EAAD,MACAjI,EAAAC,EAAAC,cAACgI,GAAD,OAEFlI,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,YACb7C,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACiI,GAAD,OAEFnI,EAAAC,EAAAC,cAAA,OAAK2C,UAAU,UACb7C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACkI,EAAD,iBAjC2BzH,aCLnC0H,eACF,SAAAA,EAAY9J,GAAM,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAA2J,IACd7J,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAAsK,GAAAxJ,KAAAH,KAAMH,KACDd,MAAQ,GAFCe,wEAQd,IAAI8J,EASJ,OANIA,EADD5J,KAAKH,MAAMtB,cACU+C,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWC,KAG7C3I,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWE,IAIrD5I,EAAAC,EAAAC,cAAC2I,EAAA,EAAD,KACI7I,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWE,IACjC5I,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAW9H,IACtC0H,UAtBI3H,aAkCN0B,mBANf,SAAyB5E,GACrB,MAAO,CACHR,cAAeQ,EAAMR,gBAIdoF,CAAyBgG,ICnBzBS,eAjBb,SAAAA,EAAYvK,GAAO,IAAAC,EAAA,OAAAT,OAAAU,EAAA,EAAAV,CAAAW,KAAAoK,IACjBtK,EAAAT,OAAAY,EAAA,EAAAZ,CAAAW,KAAAX,OAAAa,EAAA,EAAAb,CAAA+K,GAAAjK,KAAAH,KAAMH,KACDd,MAAQ,GAFIe,wEAQjB,OACEwB,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAU5J,MAAOA,GACf8B,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAaC,QAAS,KAAM5J,UAAWA,GACvC4B,EAAAC,EAAAC,cAAC6I,GAAD,eAZUpI,aCMEqI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,yECXNC,IAASC,OAAOtJ,EAAAC,EAAAC,cAACqJ,GAAA,EAAD,KAAQvJ,EAAAC,EAAAC,cAACsJ,GAAD,OAAkBhJ,SAASC,eAAe,SD0H5D,kBAAmBgJ,WACrBA,UAAUC,cAAcC,MAAMtK,KAAK,SAAAuK,GACjCA,EAAaC","file":"static/js/main.c41ff3e0.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst REACT_APP_API_KEY=\"AIzaSyDwPbrYyKjoj9llXkcKL2EVCiy0hoVbKyw\"\r\nconst REACT_APP_AUTH_DOMAIN=\"moodcalendar-6676d.firebaseapp.com\"\r\nconst REACT_APP_DATABASE_URL=\"https://moodcalendar-6676d.firebaseio.com\"\r\nconst REACT_APP_PROJECT_ID=\"moodcalendar-6676d\"\r\nconst REACT_APP_STORAGE_BUCKET=\"moodcalendar-6676d.appspot.com\"\r\nconst REACT_APP_MESSAGING_SENDER_ID=\"7576934015\"\r\n\r\nconst config = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: REACT_APP_DATABASE_URL,\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: REACT_APP_MESSAGING_SENDER_ID\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","const initialState = {\r\n    Horrible:0,\r\n    Bad:0,\r\n    Average:0,\r\n    Good:0,\r\n    Great:0,\r\n    authenticated: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    const newState = {...state};\r\n    \r\n    //HORRIBLE\r\n    if(action.type === 'INCREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible += 1;\r\n    }\r\n    if(action.type === 'DECREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible -= 1;\r\n    }\r\n\r\n    //BAD\r\n    if(action.type === 'INCREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad += 1;\r\n    }\r\n    if(action.type === 'DECREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad -= 1;\r\n    }\r\n\r\n    //AVERAGE\r\n    if(action.type === 'INCREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average += 1;\r\n    }\r\n    if(action.type === 'DECREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average -= 1;\r\n    }\r\n\r\n    //GOOD\r\n    if(action.type === 'INCREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good -= 1;\r\n    }\r\n\r\n    //GREAT\r\n    if(action.type === 'INCREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great -= 1;\r\n    }\r\n\r\n    //AUTHENTICATION\r\n    if(action.type === 'SET_AUTHENTICATE_TRUE'){\r\n        newState.authenticated = true;\r\n    }\r\n    if(action.type === 'SET_AUTHENTICATE_FALSE'){\r\n        newState.authenticated = false;\r\n    }\r\n\r\n    return newState;\r\n}","import myReducer from '../reducers/index'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { createStore } from 'redux';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n   };\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, myReducer)\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\nimport { store } from '../store/'\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        };\r\n\r\n        this.Login = this.Login.bind(this);\r\n\r\n    }\r\n\r\n    Login(username, password) {\r\n        firebase.auth().signInWithEmailAndPassword(username, password)\r\n        .then(function(){\r\n            store.dispatch({ type: 'SET_AUTHENTICATE_TRUE' });\r\n        })\r\n        .catch(function(error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Mood Calendar Home Page</h1>\r\n                <form>\r\n                    <input id=\"LoginUserName\" type=\"text\" placeholder=\"Username\"/>\r\n                    <input id=\"LoginPassword\" type=\"password\" placeholder=\"Password\"/>\r\n                    <Link to='/MoodCalendar'>\r\n                        <button onClick={ () => { this.Login(document.getElementById('LoginUserName').value, document.getElementById('LoginPassword').value) }}>Submit</button>\r\n                    </Link>\r\n                    <span>\r\n                    Not Registerd?<Link to='/create'>Create an account</Link>\r\n                    </span>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\n\r\nexport default class CreateUser extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.CreateUser = this.CreateUser.bind(this);\r\n\r\n    }\r\n\r\n    CreateUser(email, password) {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(function(){\r\n            alert('User: ' + email + ' Created');\r\n        })\r\n        .catch(function(error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Create User</h1>\r\n                <form>\r\n                    <input id=\"CreateEmail\" type=\"text\" placeholder=\"Email\"/>\r\n                    <input id=\"CreatePassword\" type=\"text\" placeholder=\"Password\"/>\r\n                    <Link to='/'>\r\n                        <button onClick={ () => { this.CreateUser(document.getElementById('CreateEmail').value, document.getElementById('CreatePassword').value) }}>Submit</button>\r\n                    </Link>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from '../Firebase';\r\nimport { Link } from 'react-router-dom'\r\nimport { store } from '../store/'\r\n\r\nexport default class Logout extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n\r\n    }\r\n\r\n    Logout() {\r\n        firebase.auth().signOut()\r\n        .then(function(){\r\n            store.dispatch({ type: 'SET_AUTHENTICATE_FALSE' });\r\n        })\r\n        .catch(function(error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Link to='/'>\r\n                <button onClick={ () => { this.Logout() }}>Logout</button>\r\n            </Link>\r\n        )\r\n    }\r\n}","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nclass ColumnGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', Horrible: this.props.Horrible},\r\n            {name: 'Bad', Bad: this.props.Bad},\r\n            {name: 'Average', Average: this.props.Average},\r\n            {name: 'Good', Good: this.props.Good},\r\n            {name: 'Great', Great: this.props.Great}\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <h3>Column Graph</h3>\r\n                <BarChart width={600} height={300} data={data}\r\n                    margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                    <CartesianGrid />\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Legend />\r\n                    <Bar dataKey=\"Horrible\" fill=\"red\" />\r\n                    <Bar dataKey=\"Bad\" fill=\"orange\" />\r\n                    <Bar dataKey=\"Average\" fill=\"yellow\" />\r\n                    <Bar dataKey=\"Good\" fill=\"blue\" />\r\n                    <Bar dataKey=\"Great\" fill=\"green\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ColumnGraph);","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Count extends Component {\r\n    constructor(props){\r\n        super(props)\r\n          this.state = {\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const moods =  [\r\n            {\r\n                name: \"Horrible\", \r\n                color: \"Red\"\r\n            }, \r\n            {\r\n                name: \"Bad\", \r\n                color: \"Orange\"\r\n            },\r\n            {\r\n                name: \"Average\", \r\n                color: \"Yellow\"\r\n            },\r\n            {\r\n                name: \"Good\", \r\n                color: \"Blue\"\r\n            },\r\n            {\r\n                name: \"Great\", \r\n                color: \"Green\"\r\n            }\r\n        ]\r\n\r\n        let CountList = []\r\n\r\n        function CountOutput(countList, name, index, moodCount){\r\n            return countList.push(<tr key={index}>{name}: <td key={index} className={name+'Count'}>{moodCount}</td></tr>);\r\n        }\r\n\r\n        moods.map((mood, index) => {\r\n            if(mood.name === \"Horrible\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Horrible);\r\n            }\r\n            if(mood.name === \"Bad\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Bad);\r\n            }\r\n            if(mood.name === \"Average\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Average);\r\n            }\r\n            if(mood.name === \"Good\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Good);\r\n            }\r\n            if(mood.name === \"Great\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Great);\r\n            }\r\n\r\n            return -1;\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <h3>Count</h3>\r\n                <table>\r\n                    <tbody>\r\n                        {CountList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Count);\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nclass PieGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', value: this.props.Horrible}, \r\n            {name: 'Bad', value: this.props.Bad},\r\n            {name: 'Average', value: this.props.Average}, \r\n            {name: 'Good', value: this.props.Good}, \r\n            {name: 'Great', value: this.props.Great}\r\n        ];\r\n        const COLORS = ['red', 'orange', 'yellow', 'blue', 'green'];   \r\n\r\n        return (\r\n            <div>\r\n                <h3>Pie Graph</h3>\r\n                <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n                <Pie\r\n                dataKey=\"value\"\r\n                data={data} \r\n                cx={400} \r\n                cy={125} \r\n                innerRadius={60}\r\n                outerRadius={80} \r\n                fill=\"#8884d8\"\r\n                paddingAngle={5}\r\n                >\r\n                    {\r\n                        data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\r\n                    }\r\n                <Legend />\r\n                </Pie>\r\n            </PieChart>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(PieGraph);","import React, { Component } from 'react';\r\nimport ColumnGraph from './ColumnGraph';\r\nimport Count from './Count';\r\nimport PieGraph from './PieGraph'\r\n\r\nexport default class Stats extends Component{\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Stats\">\r\n                <div className=\"Count\">\r\n                    <Count />\r\n                </div>\r\n                <div className=\"ColumnGraph\">\r\n                    <ColumnGraph />\r\n                </div>\r\n                <div className=\"PieGraph\">\r\n                    <PieGraph />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { store } from '../../store';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nexport default class Mood extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mood: {\r\n                name: this.props.name || \"default\",\r\n                month: this.props.month,\r\n                day: this.props.day,\r\n                color: localStorage.getItem(this.props.month + ' ' + this.props.day) || this.props.color || \"white\",\r\n                note: localStorage.getItem(this.props.month + ' ' + this.props.day + ' note') || \"\"\r\n            },\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    onOpenModal = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    \r\n    dispatchIncreaseMoodToStore(colorToChangeTo){\r\n        switch(colorToChangeTo){\r\n            case \"red\":\r\n                store.dispatch({ type: 'INCREASE_HORRIBLE_MOOD_COUNT' });\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'INCREASE_BAD_MOOD_COUNT' });\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'INCREASE_AVERAGE_MOOD_COUNT' });\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'INCREASE_GOOD_MOOD_COUNT' });\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'INCREASE_GREAT_MOOD_COUNT' });\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    dispatchDecreaseMoodToStore(colorChangingFrom){\r\n        switch(colorChangingFrom){\r\n            case \"red\":\r\n                store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n                break;\r\n            default:\r\n        }\r\n\r\n    }\r\n\r\n    changeMood(colorToChangeTo, colorChangingFrom){\r\n        \r\n        this.dispatchIncreaseMoodToStore(colorToChangeTo);\r\n\r\n        this.dispatchDecreaseMoodToStore(colorChangingFrom);\r\n        \r\n        localStorage.setItem(this.props.month + ' ' + this.props.day, colorToChangeTo);\r\n        \r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:colorToChangeTo, note:this.state.mood.note}});\r\n    }\r\n\r\n    saveNote(){\r\n        const noteText =  document.getElementById(\"NoteTextArea\");\r\n        const noteSaved = document.getElementById(\"NoteSaved\");\r\n\r\n        localStorage.setItem(this.props.month + ' ' + this.props.day + ' note', noteText.value);\r\n\r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:this.state.mood.color, note: noteText.value}});\r\n        noteSaved.style.display = \"block\";\r\n\r\n    }\r\n\r\n    setTextArea(note){\r\n        setTimeout(function(){\r\n            if(document.getElementById(\"NoteTextArea\")){\r\n                document.getElementById(\"NoteTextArea\").value = note;\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    render() {\r\n\r\n        const buttonStyle = {\r\n            backgroundColor: \"white\"\r\n        };\r\n\r\n        const output = [];\r\n\r\n        let button;\r\n\r\n        buttonStyle.backgroundColor = this.state.mood.color;\r\n\r\n        const colorOfMood = localStorage.getItem(this.state.mood.month + ' ' + this.state.mood.day);\r\n\r\n        if(colorOfMood && !this.props.TOCButton){\r\n            buttonStyle.backgroundColor = colorOfMood;\r\n        }\r\n\r\n        if(this.props.LeapYearDay){\r\n            button = <button key={Math.random} className = \"MoodRating\" id=\"LeapYearDay\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }else if(this.props.TOCButton){\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} disabled></button>\r\n        }\r\n        else{\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }\r\n\r\n        if(this.props.name){\r\n            output.push(<span key={this.props.name} className=\"MoodName\">{this.props.name}</span>)\r\n        }\r\n\r\n        output.push(button);\r\n\r\n        return (\r\n            <div className=\"CalendarCell\">\r\n                <Modal onEntered={this.setTextArea(this.state.mood.note)} open={this.state.open} onClose={this.onCloseModal} center>\r\n                    <div className=\"ModalWindow\">\r\n                        <div className=\"LeftSideModal\">\r\n                            <div>\r\n                                <button className=\"ModalHorribleButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"red\", this.state.mood.color)}}></button>Horrible\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalBadButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"orange\", this.state.mood.color)}}></button>Bad\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalAverageButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"yellow\", this.state.mood.color)}}></button>Average \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGoodButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"blue\", this.state.mood.color)}}></button>Good\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGreatButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"green\", this.state.mood.color)}}></button>Great\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"RightSideModal\">\r\n                            <h2>Leave A Note About The Day</h2>\r\n                            <textarea id=\"NoteTextArea\">{this.state.note}</textarea>\r\n                            <button onClick={() => {this.saveNote()}}>Save Note</button>\r\n                            <span id=\"NoteSaved\">Note Saved</span>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from '../Calendar/Mood';\r\nimport { store } from '../../store'\r\n\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n      }\r\n      \r\n      handleChange(e){\r\n        const sel = document.getElementById(\"LeapYearSelect\");\r\n        let leapYearButton = document.getElementById(\"LeapYearDay\");\r\n        let text= sel.options[sel.selectedIndex].text;\r\n\r\n        if(text === \"Yes\"){\r\n          leapYearButton.style.display = \"\";\r\n        }\r\n        else{\r\n          leapYearButton.style.display = \"none\";\r\n\r\n          if(leapYearButton.style.backgroundColor === \"red\"){\r\n            store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"orange\"){\r\n            store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"yellow\"){\r\n            store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"blue\"){\r\n            store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"green\"){\r\n            store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n          }\r\n\r\n          leapYearButton.style.backgroundColor = \"white\";\r\n          localStorage.removeItem('Febuary 28');\r\n\r\n        }\r\n      }\r\n\r\n      render() {\r\n    \r\n        const ListOfMoods = [];\r\n        const moods =  [\r\n          {\r\n            name: \"Horrible\", \r\n            color: \"Red\"\r\n          }, \r\n          {\r\n            name: \"Bad\", \r\n            color: \"Orange\"\r\n          },\r\n          {\r\n            name: \"Average\", \r\n            color: \"Yellow\"\r\n          },\r\n          {\r\n            name: \"Good\", \r\n            color: \"Blue\"\r\n          },\r\n          {\r\n            name: \"Great\", \r\n            color: \"Green\"\r\n          }\r\n        ]\r\n    \r\n        moods.map((mood, index) => {\r\n          return ListOfMoods.push(<Mood TOCButton = {true} name={mood.name} color={mood.color} key ={index}/>);\r\n        })\r\n\r\n        return (\r\n          <div>\r\n            Leap Year\r\n            <select id=\"LeapYearSelect\" onChange={this.handleChange.bind(this)}>\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n              {ListOfMoods}\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ColumnOfNumbers extends Component {\r\n    render() {\r\n        const days = [];\r\n\r\n        for(let i = 0; i < 32; i++){\r\n            if(i === 0){\r\n                days.push(<div key ={i} className=\"CalendarCell FirstColumnNumber\"></div>);\r\n            }else{\r\n                days.push(<div key ={i} className=\"CalendarCell\">{i}</div>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"CalendarColumn\">{days}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from './Mood'\r\n\r\nexport default class Month extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            month: {\r\n                name: this.props.name,\r\n                days: this.props.days\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const buttons = [];\r\n\r\n        for(let i = 0; i < this.state.month.days; i++){\r\n            if(this.state.month.name === \"Febuary\" && i === 28){\r\n                buttons.push(<Mood LeapYearDay={true} TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }else{\r\n                buttons.push(<Mood TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className = \"CalendarColumn\">\r\n                <div className = \"CalendarCell\">\r\n                    {this.state.month.name[0]}\r\n                </div>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ColumnOfNumbers from './ColumnOfNumbers'\r\nimport Month from './Month'\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state = {\r\n                columnOfMonths : []\r\n        };\r\n\r\n        this.CreateArrayOfMonthsAndDays = this.CreateArrayOfMonthsAndDays.bind(this);\r\n    }\r\n\r\n    CreateArrayOfMonthsAndDays(){\r\n        const ListOfMonthsAndDays = [\r\n            {\r\n                name: \"January\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"Febuary\",\r\n                days: 29\r\n            },\r\n            {\r\n                name: \"March\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"April\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"May\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"June\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"July\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"August\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"September\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"October\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"November\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"December\",\r\n                days: 31\r\n            }\r\n        ]\r\n\r\n        const months = [];\r\n\r\n        ListOfMonthsAndDays.map((month, index) => {\r\n            return months.push(<Month name={month.name} days={month.days} key={index} />)\r\n        });\r\n\r\n        return months;\r\n    }\r\n\r\n    render() {\r\n\r\n        let months = [];\r\n\r\n        months = this.CreateArrayOfMonthsAndDays();\r\n\r\n        return (\r\n            <div className=\"Calendar\">\r\n                <ColumnOfNumbers />\r\n                {months}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\nimport Logout from './HomePage/Logout'\r\n\r\n//CSS\r\nimport './Contents/CSS/App.css';\r\n\r\n//Compoonents\r\nimport Stats from './Components/Stats'\r\nimport TableOfContents from './Components/TableOfContents'\r\nimport Calendar from './Components/Calendar'\r\n\r\nexport default class CalendarApp extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: true\r\n    };\r\n  }\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <div className=\"App\">\r\n            <div className=\"Buffer\">\r\n              <h2>Table of Contents</h2>\r\n              <Logout />\r\n              <TableOfContents />\r\n            </div>\r\n            <div className=\"Calendar\">\r\n              <h2>Calendar</h2>\r\n              <Calendar />\r\n            </div>\r\n            <div className=\"Buffer\">\r\n              <h2>Stats</h2>\r\n              <Stats />\r\n            </div>\r\n          </div>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//Components\r\nimport Home from '../HomePage/index'\r\nimport CreateUser from '../HomePage/CreateUser'\r\nimport MoodCalendar from '../CalendarApp'\r\nimport { connect } from 'react-redux';\r\n\r\nclass Routes extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n        let MoodCalendarRoute;\r\n\r\n        if(this.props.authenticated){\r\n            MoodCalendarRoute = <Route exact path='/MoodCalendar' component={MoodCalendar}/>\r\n        }\r\n        else{\r\n            MoodCalendarRoute = <Route exact path='/' component={Home}/>\r\n        }\r\n\r\n        return(\r\n            <Switch>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/create' component={CreateUser}/>\r\n                {MoodCalendarRoute}\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        authenticated: state.authenticated\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Routes);","import React, { Component } from 'react';\r\nimport Routes from './Routes'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n        <Routes />\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Contents/CSS/index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}