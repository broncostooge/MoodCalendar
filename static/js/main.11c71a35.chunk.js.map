{"version":3,"sources":["Firebase/index.js","reducers/index.js","store/index.js","HomePage/index.js","HomePage/CreateUser.js","HomePage/Logout.js","Components/Stats/ColumnGraph.js","Components/Stats/Count.js","Components/Stats/PieGraph.js","Components/Stats/index.js","Components/Calendar/Mood.js","Components/TableOfContents/index.js","Components/Calendar/ColumnOfNumbers.js","Components/Calendar/Month.js","Components/Calendar/index.js","CalendarApp.js","Routes/index.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","initialState","Horrible","Bad","Average","Good","Great","authenticated","persistConfig","key","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","state","arguments","length","undefined","action","newState","Object","objectSpread","type","store","createStore","persistor","persistStore","HomePage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","WarningMessage","ErrorCode","ErrorMessage","Login","bind","assertThisInitialized","document","getElementById","style","display","email","password","_this2","setState","auth","signInWithEmailAndPassword","then","dispatch","setTimeout","history","push","catch","error","code","toString","message","_this3","react_default","a","createElement","className","id","class","name","placeholder","value","onClick","Link","to","Component","CreateUser","createUserWithEmailAndPassword","_this4","Logout","signOut","errorCode","errorMessage","console","log","ColumnGraph","data","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","connect","Count","CountList","CountOutput","countList","index","moodCount","color","map","mood","PieGraph","COLORS","PieChart","onMouseEnter","onPieEnter","Pie","cx","cy","innerRadius","outerRadius","paddingAngle","entry","Cell","Stats","Stats_Count","Stats_ColumnGraph","Stats_PieGraph","Mood","onOpenModal","open","onCloseModal","month","day","localStorage","getItem","note","colorToChangeTo","colorChangingFrom","dispatchIncreaseMoodToStore","dispatchDecreaseMoodToStore","setItem","noteText","noteSaved","button","buttonStyle","backgroundColor","output","colorOfMood","TOCButton","LeapYearDay","Math","random","disabled","index_es","onEntered","setTextArea","onClose","center","changeMood","saveNote","_default","e","sel","leapYearButton","options","selectedIndex","text","removeItem","ListOfMoods","Mood_Mood","onChange","handleChange","ColumnOfNumbers","days","i","Month","buttons","columnOfMonths","CreateArrayOfMonthsAndDays","months","Month_Month","ColumnOfNumbers_ColumnOfNumbers","CalendarApp","react_redux_es","integration_react","loading","Logout_Logout","TableOfContents_default","Calendar_default","Stats_Stats","Routes","Switch","Route","exact","path","component","Home","MoodCalendar","App","Routes_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11c71a35.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst REACT_APP_API_KEY=\"AIzaSyDwPbrYyKjoj9llXkcKL2EVCiy0hoVbKyw\"\r\nconst REACT_APP_AUTH_DOMAIN=\"moodcalendar-6676d.firebaseapp.com\"\r\nconst REACT_APP_DATABASE_URL=\"https://moodcalendar-6676d.firebaseio.com\"\r\nconst REACT_APP_PROJECT_ID=\"moodcalendar-6676d\"\r\nconst REACT_APP_STORAGE_BUCKET=\"moodcalendar-6676d.appspot.com\"\r\nconst REACT_APP_MESSAGING_SENDER_ID=\"7576934015\"\r\n\r\nconst config = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: REACT_APP_DATABASE_URL,\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: REACT_APP_MESSAGING_SENDER_ID\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","const initialState = {\r\n    Horrible:0,\r\n    Bad:0,\r\n    Average:0,\r\n    Good:0,\r\n    Great:0,\r\n    authenticated: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    const newState = {...state};\r\n    \r\n    //HORRIBLE\r\n    if(action.type === 'INCREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible += 1;\r\n    }\r\n    if(action.type === 'DECREASE_HORRIBLE_MOOD_COUNT'){\r\n        newState.Horrible -= 1;\r\n    }\r\n\r\n    //BAD\r\n    if(action.type === 'INCREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad += 1;\r\n    }\r\n    if(action.type === 'DECREASE_BAD_MOOD_COUNT'){\r\n        newState.Bad -= 1;\r\n    }\r\n\r\n    //AVERAGE\r\n    if(action.type === 'INCREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average += 1;\r\n    }\r\n    if(action.type === 'DECREASE_AVERAGE_MOOD_COUNT'){\r\n        newState.Average -= 1;\r\n    }\r\n\r\n    //GOOD\r\n    if(action.type === 'INCREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GOOD_MOOD_COUNT'){\r\n        newState.Good -= 1;\r\n    }\r\n\r\n    //GREAT\r\n    if(action.type === 'INCREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great += 1;\r\n    }\r\n    if(action.type === 'DECREASE_GREAT_MOOD_COUNT'){\r\n        newState.Great -= 1;\r\n    }\r\n\r\n    //AUTHENTICATION\r\n    if(action.type === 'SET_AUTHENTICATE_TRUE'){\r\n        newState.authenticated = true;\r\n    }\r\n    if(action.type === 'SET_AUTHENTICATE_FALSE'){\r\n        newState.authenticated = false;\r\n    }\r\n\r\n    return newState;\r\n}","import myReducer from '../reducers/index'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { createStore } from 'redux';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: storage,\r\n    stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\r\n   };\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, myReducer)\r\n\r\nexport const store = createStore(persistedReducer);\r\nexport const persistor = persistStore(store);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\nimport { store } from '../store/'\r\nimport '../Contents/CSS/LoginPage.css'\r\n\r\nexport default class HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            WarningMessage : \"\",\r\n            ErrorCode : \"\",\r\n            ErrorMessage : \"\"\r\n        };\r\n\r\n        this.Login = this.Login.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById('login_warning').style.display = \"none\";\r\n        document.getElementById('login_danger').style.display = \"none\";\r\n        document.getElementById('login_success').style.display = \"none\";\r\n    }\r\n\r\n    Login(email, password) {\r\n\r\n        this.setState (() => {\r\n            return {WarningMessage: \"\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n        })\r\n\r\n        document.getElementById('login_warning').style.display = \"none\";\r\n        document.getElementById('login_danger').style.display = \"none\";\r\n        document.getElementById('login_success').style.display = \"none\";\r\n\r\n        if(email && password){\r\n            firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n\r\n                document.getElementById('login_success').style.display = \"block\";\r\n\r\n                store.dispatch({ type: 'SET_AUTHENTICATE_TRUE' });\r\n                \r\n                setTimeout(() => {\r\n                    this.props.history.push('/MoodCalendar');\r\n                }, 2000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState (() => {\r\n                    return {WarningMessage: \"\", ErrorCode : error.code.toString(), ErrorMessage: error.message.toString()};\r\n                })\r\n                document.getElementById('login_danger').style.display = \"block\";\r\n            });\r\n        }\r\n        else{\r\n            if(email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email & Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            document.getElementById('login_warning').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div class=\"fadeIn first\">\r\n                    <h1>Mood Calendar Home Page</h1>\r\n                    </div>\r\n                    <form>\r\n\r\n                        <input type=\"text\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\"/>\r\n                        <input type=\"text\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\"/>\r\n                        <input type=\"button\" class=\"fadeIn fourth\" value=\"Log In\" onClick={ () => { this.Login(document.getElementById('login').value, document.getElementById('password').value) }}/>\r\n                        \r\n                        <div id=\"formFooter\">\r\n                            Not Registerd?<span class=\"underlineHover\"><Link to='/create'>Create an account</Link></span>\r\n                            <div className=\"alert alert-success\" id=\"login_success\">\r\n                                <strong>Success!</strong> Login Successfull\r\n                            </div>\r\n                            <div className=\"alert alert-warning\" id=\"login_warning\">\r\n                                <strong>Warning!</strong>{this.state.WarningMessage} Missing!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" id=\"login_danger\">\r\n                                <strong>Danger!</strong> {this.state.ErrorCode} {this.state.ErrorMessage}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport firebase from '../Firebase';\r\n\r\nexport default class CreateUser extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            WarningMessage : \"\",\r\n            ErrorCode : \"\",\r\n            ErrorMessage : \"\"\r\n        };\r\n\r\n        this.CreateUser = this.CreateUser.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.getElementById('create_warning').style.display = \"none\";\r\n        document.getElementById('create_danger').style.display = \"none\";\r\n        document.getElementById('create_success').style.display = \"none\";\r\n    }\r\n\r\n    CreateUser(email, password) {\r\n        \r\n        this.setState (() => {\r\n            return {WarningMessage: \"\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n        })\r\n\r\n        document.getElementById('create_warning').style.display = \"none\";\r\n        document.getElementById('create_danger').style.display = \"none\";\r\n        document.getElementById('create_success').style.display = \"none\";\r\n\r\n        if(email && password){\r\n            firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(function(){\r\n                document.getElementById('create_success').style.display = \"block\";\r\n                setTimeout(() => {\r\n                    this.props.history.push('/');\r\n                }, 2000);\r\n            })\r\n            .catch((error) => {\r\n                this.setState (() => {\r\n                    return {WarningMessage: \"\", ErrorCode : error.code.toString(), ErrorMessage: error.message.toString()};\r\n                })\r\n                document.getElementById('create_danger').style.display = \"block\";\r\n            });\r\n        }\r\n        else{\r\n            if(email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            else if(!email && !password){\r\n                this.setState (() => {\r\n                    return {WarningMessage: \" Email & Password\", ErrorCode: \"\", ErrorMessage : \"\"};\r\n                })\r\n            }\r\n            document.getElementById('create_warning').style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div className=\"fadeIn first\">\r\n                    <h1>Create User</h1>\r\n                    </div>\r\n                    <form>\r\n                        <input type=\"text\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"Email\"/>\r\n                        <input type=\"text\" id=\"password\" className=\"fadeIn third\" name=\"login\" placeholder=\"Password\"/>\r\n                        <input type=\"button\" className=\"fadeIn fourth\" value=\"Create User\" onClick={ () => { this.CreateUser(document.getElementById('login').value, document.getElementById('password').value) }}/>\r\n\r\n                        <div id=\"formFooter\">\r\n                            <span className=\"underlineHover\"><Link to='/'>Go Back To Login Page</Link></span>\r\n                            <div className=\"alert alert-success\" id=\"create_success\">\r\n                                <strong>Success!</strong> User Created\r\n                            </div>\r\n                            <div className=\"alert alert-warning\" id=\"create_warning\">\r\n                                <strong>Warning!</strong>{this.state.WarningMessage} Missing!\r\n                            </div>\r\n                            <div className=\"alert alert-danger\" id=\"create_danger\">\r\n                                <strong>Danger!</strong> {this.state.ErrorCode} {this.state.ErrorMessage}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport firebase from '../Firebase';\r\nimport { Link } from 'react-router-dom'\r\nimport { store } from '../store/'\r\n\r\nexport default class Logout extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        };\r\n\r\n        this.Logout = this.Logout.bind(this);\r\n\r\n    }\r\n\r\n    Logout() {\r\n        firebase.auth().signOut()\r\n        .then(function(){\r\n            store.dispatch({ type: 'SET_AUTHENTICATE_FALSE' });\r\n        })\r\n        .catch(function(error) {\r\n            var errorCode = error.code;\r\n            var errorMessage = error.message;\r\n\r\n            console.log(errorCode);\r\n            console.log(errorMessage);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Link to='/'>\r\n                <input type=\"button\" onClick={ () => { this.Logout() }} value=\"Logout\"/>\r\n            </Link>\r\n        )\r\n    }\r\n}","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nclass ColumnGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', Horrible: this.props.Horrible},\r\n            {name: 'Bad', Bad: this.props.Bad},\r\n            {name: 'Average', Average: this.props.Average},\r\n            {name: 'Good', Good: this.props.Good},\r\n            {name: 'Great', Great: this.props.Great}\r\n        ];\r\n\r\n        return (\r\n            <div>\r\n                <h3>Column Graph</h3>\r\n                <BarChart width={600} height={300} data={data}\r\n                    margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                    <CartesianGrid />\r\n                    <XAxis dataKey=\"name\"/>\r\n                    <YAxis/>\r\n                    <Tooltip/>\r\n                    <Legend />\r\n                    <Bar dataKey=\"Horrible\" fill=\"red\" />\r\n                    <Bar dataKey=\"Bad\" fill=\"orange\" />\r\n                    <Bar dataKey=\"Average\" fill=\"yellow\" />\r\n                    <Bar dataKey=\"Good\" fill=\"blue\" />\r\n                    <Bar dataKey=\"Great\" fill=\"green\" />\r\n                </BarChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ColumnGraph);","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Count extends Component {\r\n    constructor(props){\r\n        super(props)\r\n          this.state = {\r\n        }\r\n      }\r\n\r\n    render() {\r\n        const moods =  [\r\n            {\r\n                name: \"Horrible\", \r\n                color: \"Red\"\r\n            }, \r\n            {\r\n                name: \"Bad\", \r\n                color: \"Orange\"\r\n            },\r\n            {\r\n                name: \"Average\", \r\n                color: \"Yellow\"\r\n            },\r\n            {\r\n                name: \"Good\", \r\n                color: \"Blue\"\r\n            },\r\n            {\r\n                name: \"Great\", \r\n                color: \"Green\"\r\n            }\r\n        ]\r\n\r\n        let CountList = []\r\n\r\n        function CountOutput(countList, name, index, moodCount){\r\n            return countList.push(<tr key={index}>{name}: <td key={index} className={name+'Count'}>{moodCount}</td></tr>);\r\n        }\r\n\r\n        moods.map((mood, index) => {\r\n            if(mood.name === \"Horrible\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Horrible);\r\n            }\r\n            if(mood.name === \"Bad\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Bad);\r\n            }\r\n            if(mood.name === \"Average\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Average);\r\n            }\r\n            if(mood.name === \"Good\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Good);\r\n            }\r\n            if(mood.name === \"Great\"){\r\n                CountOutput(CountList, mood.name, index, this.props.Great);\r\n            }\r\n\r\n            return -1;\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <h3>Count</h3>\r\n                <table>\r\n                    <tbody>\r\n                        {CountList}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Count);\r\n","import React, { Component }  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { PieChart, Pie, Cell, Legend } from 'recharts';\r\n\r\nclass PieGraph extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = [\r\n            {name: 'Horrible', value: this.props.Horrible}, \r\n            {name: 'Bad', value: this.props.Bad},\r\n            {name: 'Average', value: this.props.Average}, \r\n            {name: 'Good', value: this.props.Good}, \r\n            {name: 'Great', value: this.props.Great}\r\n        ];\r\n        const COLORS = ['red', 'orange', 'yellow', 'blue', 'green'];   \r\n\r\n        return (\r\n            <div>\r\n                <h3>Pie Graph</h3>\r\n                <PieChart width={800} height={400} onMouseEnter={this.onPieEnter}>\r\n                <Pie\r\n                dataKey=\"value\"\r\n                data={data} \r\n                cx={400} \r\n                cy={125} \r\n                innerRadius={60}\r\n                outerRadius={80} \r\n                fill=\"#8884d8\"\r\n                paddingAngle={5}\r\n                >\r\n                    {\r\n                        data.map((entry, index) => <Cell key={index} fill={COLORS[index % COLORS.length]}/>)\r\n                    }\r\n                <Legend />\r\n                </Pie>\r\n            </PieChart>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { \r\n        Horrible: state.Horrible,\r\n        Bad:state.Bad,\r\n        Average:state.Average,\r\n        Good:state.Good,\r\n        Great:state.Great \r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(PieGraph);","import React, { Component } from 'react';\r\nimport ColumnGraph from './ColumnGraph';\r\nimport Count from './Count';\r\nimport PieGraph from './PieGraph'\r\n\r\nexport default class Stats extends Component{\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Stats\">\r\n                <div className=\"Count\">\r\n                    <Count />\r\n                </div>\r\n                <div className=\"ColumnGraph\">\r\n                    <ColumnGraph />\r\n                </div>\r\n                <div className=\"PieGraph\">\r\n                    <PieGraph />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { store } from '../../store';\r\nimport Modal from 'react-responsive-modal';\r\n\r\nexport default class Mood extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mood: {\r\n                name: this.props.name || \"default\",\r\n                month: this.props.month,\r\n                day: this.props.day,\r\n                color: localStorage.getItem(this.props.month + ' ' + this.props.day) || this.props.color || \"white\",\r\n                note: localStorage.getItem(this.props.month + ' ' + this.props.day + ' note') || \"\"\r\n            },\r\n            open: false,\r\n        };\r\n    }\r\n\r\n    onOpenModal = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    \r\n    dispatchIncreaseMoodToStore(colorToChangeTo){\r\n        switch(colorToChangeTo){\r\n            case \"red\":\r\n                store.dispatch({ type: 'INCREASE_HORRIBLE_MOOD_COUNT' });\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'INCREASE_BAD_MOOD_COUNT' });\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'INCREASE_AVERAGE_MOOD_COUNT' });\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'INCREASE_GOOD_MOOD_COUNT' });\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'INCREASE_GREAT_MOOD_COUNT' });\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    dispatchDecreaseMoodToStore(colorChangingFrom){\r\n        switch(colorChangingFrom){\r\n            case \"red\":\r\n                store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n                break;\r\n            case \"orange\":\r\n                store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n                break;\r\n            case \"yellow\":\r\n                store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n                break;\r\n            case \"blue\":\r\n                store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n                break;\r\n            case \"green\":\r\n                store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n                break;\r\n            default:\r\n        }\r\n\r\n    }\r\n\r\n    changeMood(colorToChangeTo, colorChangingFrom){\r\n        \r\n        this.dispatchIncreaseMoodToStore(colorToChangeTo);\r\n\r\n        this.dispatchDecreaseMoodToStore(colorChangingFrom);\r\n        \r\n        localStorage.setItem(this.props.month + ' ' + this.props.day, colorToChangeTo);\r\n        \r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:colorToChangeTo, note:this.state.mood.note}});\r\n    }\r\n\r\n    saveNote(){\r\n        const noteText =  document.getElementById(\"NoteTextArea\");\r\n        const noteSaved = document.getElementById(\"NoteSaved\");\r\n\r\n        localStorage.setItem(this.props.month + ' ' + this.props.day + ' note', noteText.value);\r\n\r\n        this.setState({mood:{name:this.state.mood.name, month:this.state.mood.month, day:this.state.mood.day, color:this.state.mood.color, note: noteText.value}});\r\n        noteSaved.style.display = \"block\";\r\n\r\n    }\r\n\r\n    setTextArea(note){\r\n        setTimeout(function(){\r\n            if(document.getElementById(\"NoteTextArea\")){\r\n                document.getElementById(\"NoteTextArea\").value = note;\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    render() {\r\n\r\n        const buttonStyle = {\r\n            backgroundColor: \"white\"\r\n        };\r\n\r\n        const output = [];\r\n\r\n        let button;\r\n\r\n        buttonStyle.backgroundColor = this.state.mood.color;\r\n\r\n        const colorOfMood = localStorage.getItem(this.state.mood.month + ' ' + this.state.mood.day);\r\n\r\n        if(colorOfMood && !this.props.TOCButton){\r\n            buttonStyle.backgroundColor = colorOfMood;\r\n        }\r\n\r\n        if(this.props.LeapYearDay){\r\n            button = <button key={Math.random} className = \"MoodRating\" id=\"LeapYearDay\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }else if(this.props.TOCButton){\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} disabled></button>\r\n        }\r\n        else{\r\n            button = <button key={Math.random} className=\"MoodRating\" style={buttonStyle} onClick={() => {this.onOpenModal()}}></button>;\r\n        }\r\n\r\n        if(this.props.name){\r\n            output.push(<span key={this.props.name} className=\"MoodName\">{this.props.name}</span>)\r\n        }\r\n\r\n        output.push(button);\r\n\r\n        return (\r\n            <div className=\"CalendarCell\">\r\n                <Modal onEntered={this.setTextArea(this.state.mood.note)} open={this.state.open} onClose={this.onCloseModal} center>\r\n                    <div className=\"ModalWindow\">\r\n                        <div className=\"LeftSideModal\">\r\n                            <div>\r\n                                <button className=\"ModalHorribleButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"red\", this.state.mood.color)}}></button>Horrible\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalBadButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"orange\", this.state.mood.color)}}></button>Bad\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalAverageButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"yellow\", this.state.mood.color)}}></button>Average \r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGoodButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"blue\", this.state.mood.color)}}></button>Good\r\n                            </div>\r\n                            <div>\r\n                                <button className=\"ModalGreatButton MoodRating ModalButton\" onClick={() => {this.changeMood(\"green\", this.state.mood.color)}}></button>Great\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"RightSideModal\">\r\n                            <h2>Leave A Note About The Day</h2>\r\n                            <textarea id=\"NoteTextArea\">{this.state.note}</textarea>\r\n                            <button onClick={() => {this.saveNote()}}>Save Note</button>\r\n                            <span id=\"NoteSaved\">Note Saved</span>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                {output}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from '../Calendar/Mood';\r\nimport { store } from '../../store'\r\n\r\nexport default class extends Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n        }\r\n      }\r\n      \r\n      handleChange(e){\r\n        const sel = document.getElementById(\"LeapYearSelect\");\r\n        let leapYearButton = document.getElementById(\"LeapYearDay\");\r\n        let text= sel.options[sel.selectedIndex].text;\r\n\r\n        if(text === \"Yes\"){\r\n          leapYearButton.style.display = \"\";\r\n        }\r\n        else{\r\n          leapYearButton.style.display = \"none\";\r\n\r\n          if(leapYearButton.style.backgroundColor === \"red\"){\r\n            store.dispatch({ type: 'DECREASE_HORRIBLE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"orange\"){\r\n            store.dispatch({ type: 'DECREASE_BAD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"yellow\"){\r\n            store.dispatch({ type: 'DECREASE_AVERAGE_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"blue\"){\r\n            store.dispatch({ type: 'DECREASE_GOOD_MOOD_COUNT' });\r\n          }\r\n          else if(leapYearButton.style.backgroundColor === \"green\"){\r\n            store.dispatch({ type: 'DECREASE_GREAT_MOOD_COUNT' });\r\n          }\r\n\r\n          leapYearButton.style.backgroundColor = \"white\";\r\n          localStorage.removeItem('Febuary 28');\r\n\r\n        }\r\n      }\r\n\r\n      render() {\r\n    \r\n        const ListOfMoods = [];\r\n        const moods =  [\r\n          {\r\n            name: \"Horrible\", \r\n            color: \"Red\"\r\n          }, \r\n          {\r\n            name: \"Bad\", \r\n            color: \"Orange\"\r\n          },\r\n          {\r\n            name: \"Average\", \r\n            color: \"Yellow\"\r\n          },\r\n          {\r\n            name: \"Good\", \r\n            color: \"Blue\"\r\n          },\r\n          {\r\n            name: \"Great\", \r\n            color: \"Green\"\r\n          }\r\n        ]\r\n    \r\n        moods.map((mood, index) => {\r\n          return ListOfMoods.push(<Mood TOCButton = {true} name={mood.name} color={mood.color} key ={index}/>);\r\n        })\r\n\r\n        return (\r\n          <div>\r\n            Leap Year\r\n            <select id=\"LeapYearSelect\" onChange={this.handleChange.bind(this)}>\r\n              <option value=\"Yes\">Yes</option>\r\n              <option value=\"No\">No</option>\r\n            </select>\r\n              {ListOfMoods}\r\n          </div>\r\n        )\r\n      }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class ColumnOfNumbers extends Component {\r\n    render() {\r\n        const days = [];\r\n\r\n        for(let i = 0; i < 32; i++){\r\n            if(i === 0){\r\n                days.push(<div key ={i} className=\"CalendarCell FirstColumnNumber\"></div>);\r\n            }else{\r\n                days.push(<div key ={i} className=\"CalendarCell\">{i}</div>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"CalendarColumn\">{days}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Mood from './Mood'\r\n\r\nexport default class Month extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            month: {\r\n                name: this.props.name,\r\n                days: this.props.days\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n\r\n        const buttons = [];\r\n\r\n        for(let i = 0; i < this.state.month.days; i++){\r\n            if(this.state.month.name === \"Febuary\" && i === 28){\r\n                buttons.push(<Mood LeapYearDay={true} TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }else{\r\n                buttons.push(<Mood TOCButton = {false} key={i} month={this.state.month.name} day={i} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className = \"CalendarColumn\">\r\n                <div className = \"CalendarCell\">\r\n                    {this.state.month.name[0]}\r\n                </div>\r\n                {buttons}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ColumnOfNumbers from './ColumnOfNumbers'\r\nimport Month from './Month'\r\n\r\nexport default class extends Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state = {\r\n                columnOfMonths : []\r\n        };\r\n\r\n        this.CreateArrayOfMonthsAndDays = this.CreateArrayOfMonthsAndDays.bind(this);\r\n    }\r\n\r\n    CreateArrayOfMonthsAndDays(){\r\n        const ListOfMonthsAndDays = [\r\n            {\r\n                name: \"January\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"Febuary\",\r\n                days: 29\r\n            },\r\n            {\r\n                name: \"March\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"April\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"May\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"June\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"July\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"August\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"September\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"October\",\r\n                days: 31\r\n            },\r\n            {\r\n                name: \"November\",\r\n                days: 30\r\n            },\r\n            {\r\n                name: \"December\",\r\n                days: 31\r\n            }\r\n        ]\r\n\r\n        const months = [];\r\n\r\n        ListOfMonthsAndDays.map((month, index) => {\r\n            return months.push(<Month name={month.name} days={month.days} key={index} />)\r\n        });\r\n\r\n        return months;\r\n    }\r\n\r\n    render() {\r\n\r\n        let months = [];\r\n\r\n        months = this.CreateArrayOfMonthsAndDays();\r\n\r\n        return (\r\n            <div className=\"Calendar\">\r\n                <ColumnOfNumbers />\r\n                {months}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\nimport Logout from './HomePage/Logout'\r\n\r\n//CSS\r\nimport './Contents/CSS/App.css';\r\n\r\n//Compoonents\r\nimport Stats from './Components/Stats'\r\nimport TableOfContents from './Components/TableOfContents'\r\nimport Calendar from './Components/Calendar'\r\n\r\nexport default class CalendarApp extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      open: true\r\n    };\r\n  }\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onOpenModal = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <div className=\"App\">\r\n            <div className=\"Buffer\">\r\n              <h2>Table of Contents</h2>\r\n              <Logout />\r\n              <TableOfContents />\r\n            </div>\r\n            <div className=\"Calendar\">\r\n              <h2>Calendar</h2>\r\n              <Calendar />\r\n            </div>\r\n            <div className=\"Buffer\">\r\n              <h2>Stats</h2>\r\n              <Stats />\r\n            </div>\r\n          </div>\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//Components\r\nimport Home from '../HomePage/index'\r\nimport CreateUser from '../HomePage/CreateUser'\r\nimport MoodCalendar from '../CalendarApp'\r\n\r\nexport default class Routes extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Switch>\r\n                <Route exact path='/' component={Home}/>\r\n                <Route exact path='/create' component={CreateUser}/>\r\n                <Route exact path='/MoodCalendar' component={MoodCalendar}/>\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Routes from './Routes'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport { persistor, store } from './store';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store} >\r\n        <PersistGate loading={null} persistor={persistor}>\r\n        <Routes />\r\n        </PersistGate>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Contents/CSS/index.css';\r\nimport App from './App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}